{
  "$id": "urn:statement",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Statements",
  "description": "An array of Statements.",
  "version": "0.4",
  "type": "array",
  "items": {
    "title": "Statement",
    "description": "A claim about a person, entity or relationship, made at a particular point in time.",
    "type": "object",
    "properties": {
      "statementId": {
        "title": "Statement Identifier",
        "description": "A persistent globally unique identifier for this Statement. Length MUST be 32 - 64 characters (inclusive).",
        "type": "string",
        "minLength": 32,
        "maxLength": 64
      },
      "statementDate": {
        "title": "Statement Date",
        "description": "The date on which this statement was declared by the source, in full-date (YYYY-MM-DD) or date-time (e.g. YYYY-MM-DDTHH:MM:SSZ) format. See the IETF RFC3339 standard, section 5.6.",
        "type": "string",
        "anyOf": [
          {
            "format": "date"
          },
          {
            "format": "date-time"
          }
        ]
      },
      "annotations": {
        "title": "Annotations",
        "description": "Annotations about this Statement or parts of this Statement",
        "type": "array",
        "items": {
          "title": "Annotation",
          "description": "Additional information about the data contained in this Statement. Annotations can apply to a whole statement, an object or a single field. Custom properties can be included within the Annotation object to provide structured data where required.",
          "type": "object",
          "properties": {
            "statementPointerTarget": {
              "title": "Statement Fragment Pointer",
              "description": "An RFC6901 JSON Pointer (https://tools.ietf.org/html/rfc6901) describing the target fragment of the statement that this Annotation applies to, starting from the root of the Statement. An empty string (\"\") indicates that the Annotation applies to the whole Statement.",
              "type": "string"
            },
            "creationDate": {
              "title": "Creation Date",
              "description": "The date on which this Annotation was created, in full-date (YYYY-MM-DD) or date-time (e.g. YYYY-MM-DDTHH:MM:SSZ) format. See the IETF RFC3339 standard, section 5.6.",
              "type": "string",
              "anyOf": [
                {
                  "format": "date"
                },
                {
                  "format": "date-time"
                }
              ]
            },
            "createdBy": {
              "title": "Created By",
              "description": "The person, organisation or agent that created this Annotation.",
              "type": "object",
              "properties": {
                "name": {
                  "title": "Name",
                  "description": "The name of the person, organisation or agent that created this Annotation.",
                  "type": "string"
                },
                "uri": {
                  "title": "URI",
                  "description": "An optional URI to identify the person, organisation or agent that created this Annotation.",
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "motivation": {
              "title": "Motivation",
              "description": "The reason for this Annotation, using the annotationMotivation codelist.",
              "type": "string",
              "enum": [
                "commenting",
                "correcting",
                "identifying",
                "linking",
                "transformation"
              ],
              "codelist": "annotationMotivation.csv",
              "openCodelist": false
            },
            "description": {
              "title": "Description",
              "description": "A free text description providing extra information about part of this Statement.",
              "type": "string"
            },
            "transformedContent": {
              "type": "string",
              "title": "Transformed Content",
              "description": "A representation of the Annotation target after the transformation in the `description` field has been applied. This field MUST only be used when the `motivation` is 'transformation'."
            },
            "url": {
              "title": "URL",
              "description": "A linked resource that annotates, provides context for or enhances this Statement. The content of the resource, or the relationship to the statement, MAY be described in the `description` field. This field is REQUIRED if the value of `motivation` is 'linking'.",
              "type": "string",
              "format": "uri"
            }
          },
          "allOf": [
            {
              "if": {
                "properties": {
                  "motivation": {
                    "const": "linking"
                  }
                }
              },
              "then": {
                "required": [
                  "statementPointerTarget",
                  "motivation",
                  "url"
                ]
              },
              "else": {
                "required": [
                  "statementPointerTarget",
                  "motivation"
                ]
              }
            },
            {
              "if": {
                "not": {
                  "properties": {
                    "motivation": {
                      "const": "transformation"
                    }
                  }
                }
              },
              "then": {
                "properties": {
                  "transformedContent": {
                    "const": ""
                  }
                }
              }
            }
          ]
        }
      },
      "publicationDetails": {
        "title": "Publication Details",
        "description": "Information concerning the publication of this Statement.",
        "type": "object",
        "properties": {
          "publicationDate": {
            "title": "Publication date",
            "description": "The date on which this statement was published, in full-date (YYYY-MM-DD) or date-time (e.g. YYYY-MM-DDTHH:MM:SSZ) format. See the IETF RFC3339 standard, section 5.6.",
            "type": "string",
            "anyOf": [
              {
                "format": "date"
              },
              {
                "format": "date-time"
              }
            ]
          },
          "bodsVersion": {
            "title": "BODS Version",
            "description": "The version of the Beneficial Ownership Data Standard to which this Statement conforms, expressed as major.minor (e.g. 0.2 or 1.0). In a published BODS dataset, all Statements MUST have the same major version number.",
            "type": "string",
            "pattern": "^(\\d+\\.)(\\d+)$"
          },
          "license": {
            "title": "License URL",
            "description": "A link to the license that applies to this Statement. The canonical URI of the license SHOULD be used. Publishers are encouraged to use a Public Domain Dedication or Open Definition Conformant (http://opendefinition.org/licenses/) license.",
            "type": "string",
            "format": "uri"
          },
          "publisher": {
            "type": "object",
            "title": "Publisher",
            "description": "Details of the organisation or person publishing a Statement.",
            "properties": {
              "name": {
                "title": "Name",
                "description": "The name of the publisher.",
                "type": "string"
              },
              "url": {
                "title": "URL",
                "description": "The URL where details of the full dataset, or of the publisher, can be found.",
                "type": "string",
                "format": "uri"
              }
            },
            "anyOf": [
              {
                "required": [
                  "name"
                ]
              },
              {
                "required": [
                  "url"
                ]
              }
            ]
          }
        },
        "required": [
          "publicationDate",
          "bodsVersion",
          "publisher"
        ]
      },
      "source": {
        "title": "Source",
        "description": "The source of information in this statement. Each statement SHOULD contain source information.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Source Type",
            "description": "The types of the source, using the sourceType codelist. Include 'verified' in the array if the information in the Statement has undergone a verification process.",
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "selfDeclaration",
                "officialRegister",
                "thirdParty",
                "primaryResearch",
                "verified"
              ],
              "codelist": "sourceType.csv",
              "openCodelist": false
            }
          },
          "description": {
            "title": "Description",
            "description": "Additional, free text information about the source of information.",
            "type": "string"
          },
          "url": {
            "title": "Source URL",
            "description": "The external URL from which this information was fetched, if relevant. Or, if relevant, a URL providing additional detail on how this information was sourced.",
            "type": "string",
            "format": "uri"
          },
          "retrievedAt": {
            "title": "Retrieved At",
            "description": "A timestamp indicating when this information was imported from an external system, in full-date (YYYY-MM-DD) or date-time (e.g. YYYY-MM-DDTHH:MM:SSZ) format. See the IETF RFC3339 standard, section 5.6.",
            "type": "string",
            "anyOf": [
              {
                "format": "date"
              },
              {
                "format": "date-time"
              }
            ]
          },
          "assertedBy": {
            "title": "Asserted By",
            "description": "The people or organisations providing the information asserted in this Statement. This may include the declaring subject of a self-declaration, or the name of an agent making a declaration on their behalf. If this Statement has been verified, the array may include the name of the organisation providing verification.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "title": "Name",
                  "description": "The name of the agent making the assertion",
                  "type": "string"
                },
                "uri": {
                  "title": "URI",
                  "description": "An optional URI to identify the agent making the assertion",
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "declaration": {
        "title": "Declaration Reference",
        "description": "An identifier or reference for a declaration within the publisher\u2019s system. Where a Statement is a claim from a particular declaration (made at a point in time by a `source` about a `declarationSubject`) this field identifies the declaration.",
        "type": "string"
      },
      "declarationSubject": {
        "title": "Declaration Subject",
        "description": "A `recordId` value for the subject of a beneficial ownership network (always an entity or person).",
        "type": "string"
      },
      "recordId": {
        "title": "Record Identifier",
        "description": "A unique identifier for the record (within the publisher's system) to which this Statement relates. (A record captures information about an entity, natural person or relationship within the beneficial ownership network of a particular declaration subject.)",
        "type": "string"
      },
      "recordType": {
        "title": "Record Type",
        "description": "The type of record (within the publisher's system) to which this Statement relates: entity, person, or relationship.",
        "type": "string",
        "enum": [
          "person",
          "entity",
          "relationship"
        ],
        "codelist": "recordType.csv",
        "openCodelist": false
      },
      "recordStatus": {
        "title": "Record Status",
        "description": "The lifecycle status of the record (within the publisher's system) to which this Statement relates, using the recordStatus codelist.",
        "type": "string",
        "enum": [
          "new",
          "updated",
          "closed"
        ],
        "codelist": "recordStatus.csv",
        "openCodelist": false
      },
      "recordDetails": {
        "title": "Record Details",
        "description": "The details of the entity, person or relationship as declared on the Statement Date.",
        "type": "object"
      }
    },
    "allOf": [
      {
        "if": {
          "properties": {
            "recordType": {
              "const": "entity"
            }
          }
        },
        "then": {
          "properties": {
            "recordDetails": {
              "$id": "urn:entity",
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "version": "0.4",
              "title": "Entity Record Details",
              "description": "Information about an entity.",
              "type": "object",
              "properties": {
                "isComponent": {
                  "title": "Is component",
                  "description": "Whether this entity is a component in an indirect relationship. Where `isComponent` is 'true': (1) the `recordId` of this entity MUST be an element in the `componentRecords` array of that primary Relationship Statement, (2) this Entity Statement MUST come before that primary Relationship Statement in a BODS package or stream, (3) the replacement of this Entity Statement SHOULD be considered when replacing the primary Relationship Statement. The primary Relationship statement MUST have a `isComponent` value of 'false'.",
                  "type": "boolean"
                },
                "entityType": {
                  "type": "object",
                  "title": "Entity Type",
                  "description": "The form of the entity described in the Statement.",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Type",
                      "description": "The general form of the entity, using the entityType codelist.",
                      "codelist": "entityType.csv",
                      "enum": [
                        "registeredEntity",
                        "legalEntity",
                        "arrangement",
                        "anonymousEntity",
                        "unknownEntity",
                        "state",
                        "stateBody"
                      ]
                    },
                    "subtype": {
                      "type": "string",
                      "title": "Subtype",
                      "description": "The particular form of the entity, where relevant, using the entitySubtype codelist. The value MUST align with the `entityType` value.",
                      "codelist": "entitySubtype.csv",
                      "enum": [
                        "governmentDepartment",
                        "stateAgency",
                        "other",
                        "trust",
                        "nomination"
                      ],
                      "openCodelist": false
                    },
                    "details": {
                      "type": "string",
                      "title": "Details",
                      "description": "This may be used to provide a local name for this type of entity, or any further information to identify the type of entity. For example, in Finland 'ministeri\u00f6' for a government department."
                    }
                  },
                  "propertyOrder": 4,
                  "allOf": [
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "enum": [
                              "arrangement"
                            ]
                          }
                        }
                      },
                      "then": {
                        "properties": {
                          "subtype": {
                            "enum": [
                              "trust",
                              "nomination",
                              "other"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "enum": [
                              "legalEntity"
                            ]
                          }
                        }
                      },
                      "then": {
                        "properties": {
                          "subtype": {
                            "enum": [
                              "trust",
                              "other"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "enum": [
                              "stateBody"
                            ]
                          }
                        }
                      },
                      "then": {
                        "properties": {
                          "subtype": {
                            "enum": [
                              "governmentDepartment",
                              "stateAgency",
                              "other"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "enum": [
                              "registeredEntity",
                              "state",
                              "anonymousEntity",
                              "unknownEntity"
                            ]
                          }
                        }
                      },
                      "then": {
                        "properties": {
                          "subtype": {
                            "enum": [
                              "other"
                            ]
                          }
                        }
                      }
                    }
                  ]
                },
                "unspecifiedEntityDetails": {
                  "title": "Unspecified or unknown person or entity",
                  "description": "A `reason` MUST be supplied.",
                  "type": "object",
                  "properties": {
                    "reason": {
                      "title": "Reason",
                      "description": "The reason that a person or entity cannot be specified, using the unspecifiedReason codelist.",
                      "type": "string",
                      "enum": [
                        "noBeneficialOwners",
                        "subjectUnableToConfirmOrIdentifyBeneficialOwner",
                        "interestedPartyHasNotProvidedInformation",
                        "subjectExemptFromDisclosure",
                        "interestedPartyExemptFromDisclosure",
                        "unknown",
                        "informationUnknownToPublisher"
                      ],
                      "codelist": "unspecifiedReason.csv",
                      "openCodelist": false
                    },
                    "description": {
                      "title": "Description",
                      "description": "Additional information about the absence of details for a person or entity. This field may be used to provide set phrases from a source system, or a free text explanation.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "reason"
                  ]
                },
                "name": {
                  "title": "Entity Name",
                  "description": "The declared name of this entity.",
                  "type": "string",
                  "propertyOrder": 10
                },
                "alternateNames": {
                  "title": "Alternative Names",
                  "description": "An array of other names this entity is known by.",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "title": "Name",
                    "description": "A name this entity is known by."
                  },
                  "propertyOrder": 12
                },
                "jurisdiction": {
                  "title": "Jurisdiction",
                  "description": "A Jurisdiction MUST have a name. A jurisdiction SHOULD have a 2-letter country code (ISO 3166-1) or a subdivision code (ISO 3166-2).",
                  "type": "object",
                  "properties": {
                    "name": {
                      "title": "Name",
                      "description": "The name of the jurisdiction",
                      "type": "string"
                    },
                    "code": {
                      "title": "Country or Subdivision Code",
                      "description": "The 2-letter country code (ISO 3166-1) or the subdivision code (ISO 3166-2) for the jurisdiction.",
                      "type": "string",
                      "maxLength": 6,
                      "minLength": 2
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "identifiers": {
                  "title": "Identifiers",
                  "description": "One or more official identifiers for this entity. Where available, official registration numbers should be provided.",
                  "type": "array",
                  "items": {
                    "title": "Identifier",
                    "description": "An identifier that has been assigned to a person or entity. `scheme` or `schemeName` (or both) MUST be included in an Identifier object.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "ID",
                        "description": "The identifier for a person or entity, as issued by the scheme.",
                        "type": "string"
                      },
                      "scheme": {
                        "title": "Scheme Code",
                        "description": "For entities, a code from org-id.guide (https://www.org-id.guide) for an identifier-issuing authority (e.g. 'GB-COH'). For natural persons, a value with the pattern {JURISDICTION}-{TYPE} where JURISDICTION is an ISO 3166-1 3-digit country code and TYPE is one of PASSPORT, TAXID or IDCARD.",
                        "type": "string"
                      },
                      "schemeName": {
                        "title": "Scheme Name",
                        "description": "The name of the identifier-issuing authority.",
                        "type": "string"
                      },
                      "uri": {
                        "title": "URI",
                        "description": "A canonical URI (https://en.wikipedia.org/wiki/Uniform_Resource_Identifier) for the identifier and associated details of the person or entity, if one exists.",
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "anyOf": [
                      {
                        "required": [
                          "scheme"
                        ]
                      },
                      {
                        "required": [
                          "schemeName"
                        ]
                      },
                      {
                        "required": [
                          "scheme",
                          "schemeName"
                        ]
                      }
                    ]
                  },
                  "propertyOrder": 20
                },
                "foundingDate": {
                  "title": "Founding Date",
                  "description": "The date on which this entity was founded, created or registered. The date MUST be given in YYYY-MM-DD format. Where a precise month or date are not available, the value may be rounded to the first day of the (first) month. This rounding SHOULD be noted in accompanying guidance (such as a publication policy or data use guide).",
                  "type": "string",
                  "format": "date",
                  "propertyOrder": 30
                },
                "dissolutionDate": {
                  "title": "Dissolution Date",
                  "description": "The date on which this entity was dissolved or ceased, if it is no longer active. The date MUST be given in YYYY-MM-DD format. Where a precise month or date are not available, the value may be rounded to the first day of the (first) month. This rounding SHOULD be noted in accompanying guidance (such as a publication policy or data use guide).",
                  "type": "string",
                  "format": "date",
                  "propertyOrder": 35
                },
                "addresses": {
                  "title": "Addresses",
                  "description": "One or more addresses for this entity.",
                  "type": "array",
                  "items": {
                    "title": "Address",
                    "description": "Semi-structured address details, suitable for processing using address-parsing algorithms. Where postal codes and country information are isolated fields in source systems, this information SHOULD be published in the dedicated fields and SHOULD NOT be published in the `address` field.",
                    "type": "object",
                    "properties": {
                      "type": {
                        "title": "Type",
                        "description": "The function of the address, using the addressType codelist.",
                        "type": "string",
                        "enum": [
                          "placeOfBirth",
                          "residence",
                          "registered",
                          "service",
                          "alternative",
                          "business"
                        ],
                        "codelist": "addressType.csv",
                        "openCodelist": false
                      },
                      "address": {
                        "title": "Address",
                        "description": "The address, with each line or component separated by a line-break or comma.",
                        "type": "string"
                      },
                      "postCode": {
                        "title": "Postcode",
                        "description": "The postal code for this address.",
                        "type": "string"
                      },
                      "country": {
                        "title": "Country",
                        "description": "A country MUST have a name. A country SHOULD have a 2-letter country code (ISO 3166-1)",
                        "type": "object",
                        "properties": {
                          "name": {
                            "title": "Name",
                            "description": "The name of the country",
                            "type": "string"
                          },
                          "code": {
                            "title": "Country Code",
                            "description": "The 2-letter country code (ISO 3166-1) for this country.",
                            "type": "string",
                            "maxLength": 2,
                            "minLength": 2
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    }
                  },
                  "propertyOrder": 40
                },
                "uri": {
                  "title": "URI",
                  "description": "Where a persistent URI (https://en.wikipedia.org/wiki/Uniform_Resource_Identifier) is available for this entity this should be included.",
                  "type": "string",
                  "format": "uri",
                  "propertyOrder": 21
                },
                "publicListing": {
                  "type": "object",
                  "title": "Public Listing",
                  "description": "Details of a publicly listed company, its securities (shares and other tradable financial instruments related to the entity), and related regulatory filings.",
                  "required": [
                    "hasPublicListing"
                  ],
                  "minProperties": 1,
                  "properties": {
                    "hasPublicListing": {
                      "type": "boolean",
                      "title": "Has Public Listing",
                      "description": "Whether the entity is a publicly listed company."
                    },
                    "companyFilingsURLs": {
                      "type": "array",
                      "title": "Company Filings URLs",
                      "description": "URL or URLs where regulatory filings related to major holdings can be retrieved. URLs may point to pages maintained by regulatory bodies, stock exchanges or by the company itself.",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "securitiesListings": {
                      "type": "array",
                      "title": "Securities Listings",
                      "description": "Details of the entity's securities and the public exchanges and markets on which they are traded. All equity securities SHOULD be listed here, plus any other securities from which beneficial ownership might be derived. Where a security is traded on more than one market, there SHOULD be an entry for each market (or market segment).",
                      "items": {
                        "type": "object",
                        "title": "Securities Listing",
                        "description": "Details of a security and the market on which it is traded.",
                        "required": [
                          "stockExchangeJurisdiction",
                          "security",
                          "stockExchangeName"
                        ],
                        "properties": {
                          "marketIdentifierCode": {
                            "type": "string",
                            "title": "Market Identifier Code (MIC)",
                            "description": "The Market Identifier Code (MIC) of the market on which the security is traded. Where the security is traded on a segment of an exchange, this is the MIC of the segment. Where it is traded on the main exchange, this is the MIC of the main exchange and MUST match the `operatingMarketIdentifierCode`. MICs are allocated and managed under ISO standard 10383."
                          },
                          "operatingMarketIdentifierCode": {
                            "type": "string",
                            "title": "Operating Market Identifier Code (Operating MIC)",
                            "description": "The Market Identifier Code (MIC) of the main exchange or trading platform handling trades in this security. Where the security is traded on a segment of an exchange, this is the MIC of the parent exchange or trading platform. Where it is traded on the main exchange, this is the MIC of that main exchange and MUST match the `marketIdentifierCode`. MICs are allocated and managed under ISO standard 10383."
                          },
                          "stockExchangeJurisdiction": {
                            "type": "string",
                            "title": "Stock Exchange Jurisdiction",
                            "description": "The 2-letter country code (ISO 3166-1) or the subdivision code (ISO 3166-2) for the jurisdiction under which the exchange, market or trading platform is regulated.",
                            "maxLength": 6,
                            "minLength": 2
                          },
                          "stockExchangeName": {
                            "type": "string",
                            "title": "Stock Exchange Name",
                            "description": "The name of the exchange, market or trading platform on which the security is traded. If the security is traded on a segment of the exchange, then the name SHOULD include both elements. For example, 'London Stock Exchange - MTF'."
                          },
                          "security": {
                            "type": "object",
                            "title": "Security",
                            "description": "Identifying information of the stock or other security.",
                            "required": [
                              "ticker"
                            ],
                            "properties": {
                              "idScheme": {
                                "type": "string",
                                "title": "Identifier Scheme",
                                "description": "The scheme under which the security has been issued a unique, persistent identifier, using the securitiesIdentifierSchemes codelist.",
                                "enum": [
                                  "isin",
                                  "figi",
                                  "cusip",
                                  "cins"
                                ],
                                "codelist": "securitiesIdentifierSchemes.csv"
                              },
                              "id": {
                                "type": "string",
                                "title": "Identifier",
                                "description": "The unique identifier of the security as issued under the `idScheme`."
                              },
                              "ticker": {
                                "type": "string",
                                "title": "Stock Ticker",
                                "description": "The stock ticker identifying this security on the named stock exchange."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "formedByStatute": {
                  "type": "object",
                  "title": "Formed by Statute",
                  "description": "The law which mandated the formation of the entity described in the statement, where applicable. This information SHOULD be provided where a state has created an agency or other entity with specific legislation.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "title": "Statute Name",
                      "description": "The name of the law. "
                    },
                    "date": {
                      "type": "string",
                      "title": "Date",
                      "description": "The date on which the law came into force. The date MUST be given in YYYY-MM-DD format. Where a precise month or date are not available, the value may be rounded to the first day of the (first) month. This rounding SHOULD be noted in accompanying guidance (such as a publication policy or data use guide).",
                      "format": "date"
                    }
                  },
                  "propertyOrder": 18
                }
              },
              "required": [
                "isComponent",
                "entityType"
              ],
              "$defs": {
                "PublicListing": {
                  "type": "object",
                  "title": "Public Listing",
                  "description": "Details of a publicly listed company, its securities (shares and other tradable financial instruments related to the entity), and related regulatory filings.",
                  "required": [
                    "hasPublicListing"
                  ],
                  "minProperties": 1,
                  "properties": {
                    "hasPublicListing": {
                      "type": "boolean",
                      "title": "Has Public Listing",
                      "description": "Whether the entity is a publicly listed company."
                    },
                    "companyFilingsURLs": {
                      "type": "array",
                      "title": "Company Filings URLs",
                      "description": "URL or URLs where regulatory filings related to major holdings can be retrieved. URLs may point to pages maintained by regulatory bodies, stock exchanges or by the company itself.",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "securitiesListings": {
                      "type": "array",
                      "title": "Securities Listings",
                      "description": "Details of the entity's securities and the public exchanges and markets on which they are traded. All equity securities SHOULD be listed here, plus any other securities from which beneficial ownership might be derived. Where a security is traded on more than one market, there SHOULD be an entry for each market (or market segment).",
                      "items": {
                        "type": "object",
                        "title": "Securities Listing",
                        "description": "Details of a security and the market on which it is traded.",
                        "required": [
                          "stockExchangeJurisdiction",
                          "security",
                          "stockExchangeName"
                        ],
                        "properties": {
                          "marketIdentifierCode": {
                            "type": "string",
                            "title": "Market Identifier Code (MIC)",
                            "description": "The Market Identifier Code (MIC) of the market on which the security is traded. Where the security is traded on a segment of an exchange, this is the MIC of the segment. Where it is traded on the main exchange, this is the MIC of the main exchange and MUST match the `operatingMarketIdentifierCode`. MICs are allocated and managed under ISO standard 10383."
                          },
                          "operatingMarketIdentifierCode": {
                            "type": "string",
                            "title": "Operating Market Identifier Code (Operating MIC)",
                            "description": "The Market Identifier Code (MIC) of the main exchange or trading platform handling trades in this security. Where the security is traded on a segment of an exchange, this is the MIC of the parent exchange or trading platform. Where it is traded on the main exchange, this is the MIC of that main exchange and MUST match the `marketIdentifierCode`. MICs are allocated and managed under ISO standard 10383."
                          },
                          "stockExchangeJurisdiction": {
                            "type": "string",
                            "title": "Stock Exchange Jurisdiction",
                            "description": "The 2-letter country code (ISO 3166-1) or the subdivision code (ISO 3166-2) for the jurisdiction under which the exchange, market or trading platform is regulated.",
                            "maxLength": 6,
                            "minLength": 2
                          },
                          "stockExchangeName": {
                            "type": "string",
                            "title": "Stock Exchange Name",
                            "description": "The name of the exchange, market or trading platform on which the security is traded. If the security is traded on a segment of the exchange, then the name SHOULD include both elements. For example, 'London Stock Exchange - MTF'."
                          },
                          "security": {
                            "type": "object",
                            "title": "Security",
                            "description": "Identifying information of the stock or other security.",
                            "required": [
                              "ticker"
                            ],
                            "properties": {
                              "idScheme": {
                                "type": "string",
                                "title": "Identifier Scheme",
                                "description": "The scheme under which the security has been issued a unique, persistent identifier, using the securitiesIdentifierSchemes codelist.",
                                "enum": [
                                  "isin",
                                  "figi",
                                  "cusip",
                                  "cins"
                                ],
                                "codelist": "securitiesIdentifierSchemes.csv"
                              },
                              "id": {
                                "type": "string",
                                "title": "Identifier",
                                "description": "The unique identifier of the security as issued under the `idScheme`."
                              },
                              "ticker": {
                                "type": "string",
                                "title": "Stock Ticker",
                                "description": "The stock ticker identifying this security on the named stock exchange."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "SecuritiesListing": {
                  "type": "object",
                  "title": "Securities Listing",
                  "description": "Details of a security and the market on which it is traded.",
                  "required": [
                    "stockExchangeJurisdiction",
                    "security",
                    "stockExchangeName"
                  ],
                  "properties": {
                    "marketIdentifierCode": {
                      "type": "string",
                      "title": "Market Identifier Code (MIC)",
                      "description": "The Market Identifier Code (MIC) of the market on which the security is traded. Where the security is traded on a segment of an exchange, this is the MIC of the segment. Where it is traded on the main exchange, this is the MIC of the main exchange and MUST match the `operatingMarketIdentifierCode`. MICs are allocated and managed under ISO standard 10383."
                    },
                    "operatingMarketIdentifierCode": {
                      "type": "string",
                      "title": "Operating Market Identifier Code (Operating MIC)",
                      "description": "The Market Identifier Code (MIC) of the main exchange or trading platform handling trades in this security. Where the security is traded on a segment of an exchange, this is the MIC of the parent exchange or trading platform. Where it is traded on the main exchange, this is the MIC of that main exchange and MUST match the `marketIdentifierCode`. MICs are allocated and managed under ISO standard 10383."
                    },
                    "stockExchangeJurisdiction": {
                      "type": "string",
                      "title": "Stock Exchange Jurisdiction",
                      "description": "The 2-letter country code (ISO 3166-1) or the subdivision code (ISO 3166-2) for the jurisdiction under which the exchange, market or trading platform is regulated.",
                      "maxLength": 6,
                      "minLength": 2
                    },
                    "stockExchangeName": {
                      "type": "string",
                      "title": "Stock Exchange Name",
                      "description": "The name of the exchange, market or trading platform on which the security is traded. If the security is traded on a segment of the exchange, then the name SHOULD include both elements. For example, 'London Stock Exchange - MTF'."
                    },
                    "security": {
                      "type": "object",
                      "title": "Security",
                      "description": "Identifying information of the stock or other security.",
                      "required": [
                        "ticker"
                      ],
                      "properties": {
                        "idScheme": {
                          "type": "string",
                          "title": "Identifier Scheme",
                          "description": "The scheme under which the security has been issued a unique, persistent identifier, using the securitiesIdentifierSchemes codelist.",
                          "enum": [
                            "isin",
                            "figi",
                            "cusip",
                            "cins"
                          ],
                          "codelist": "securitiesIdentifierSchemes.csv"
                        },
                        "id": {
                          "type": "string",
                          "title": "Identifier",
                          "description": "The unique identifier of the security as issued under the `idScheme`."
                        },
                        "ticker": {
                          "type": "string",
                          "title": "Stock Ticker",
                          "description": "The stock ticker identifying this security on the named stock exchange."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "if": {
          "properties": {
            "recordType": {
              "const": "person"
            }
          }
        },
        "then": {
          "properties": {
            "recordDetails": {
              "$id": "urn:person",
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "version": "0.4",
              "type": "object",
              "title": "Person Record Details",
              "description": "Information about a natural person.",
              "properties": {
                "isComponent": {
                  "title": "Is component",
                  "description": "Whether this person is a component of an indirect relationship. Where `isComponent` is 'true': (1) the `recordId` of this person MUST be an element in the `componentRecords` array of that primary Relationship Statement, (2) this Person Statement MUST come before that primary Relationship Statement in a BODS package or stream, (3) the replacement of this Person Statement SHOULD be considered when replacing the primary Relationship Statement. The primary Relationship Statement MUST have a `isComponent` value of 'false'.",
                  "type": "boolean"
                },
                "personType": {
                  "title": "Person Type",
                  "description": "The status of this person, using the personType codelist. Where a person has the type 'anonymousPerson' or 'unknownPerson' a reason for the absence of information SHOULD be provided in 'unspecifiedPersonDetails'",
                  "type": "string",
                  "enum": [
                    "anonymousPerson",
                    "unknownPerson",
                    "knownPerson"
                  ],
                  "propertyOrder": 4,
                  "codelist": "personType.csv",
                  "openCodelist": false
                },
                "unspecifiedPersonDetails": {
                  "title": "Unspecified or unknown person or entity",
                  "description": "A `reason` MUST be supplied.",
                  "type": "object",
                  "properties": {
                    "reason": {
                      "title": "Reason",
                      "description": "The reason that a person or entity cannot be specified, using the unspecifiedReason codelist.",
                      "type": "string",
                      "enum": [
                        "noBeneficialOwners",
                        "subjectUnableToConfirmOrIdentifyBeneficialOwner",
                        "interestedPartyHasNotProvidedInformation",
                        "subjectExemptFromDisclosure",
                        "interestedPartyExemptFromDisclosure",
                        "unknown",
                        "informationUnknownToPublisher"
                      ],
                      "codelist": "unspecifiedReason.csv",
                      "openCodelist": false
                    },
                    "description": {
                      "title": "Description",
                      "description": "Additional information about the absence of details for a person or entity. This field may be used to provide set phrases from a source system, or a free text explanation.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "reason"
                  ]
                },
                "names": {
                  "title": "Names",
                  "description": "One or more known names for this person.",
                  "type": "array",
                  "items": {
                    "title": "Name",
                    "description": "A name by which this person is known. A name MUST be provided in `fullName`, and MAY be broken down in the `familyName`, `givenName` and `patronymicName` fields, based on the EC ISA Core Person Vocabulary (https://joinup.ec.europa.eu/solution/e-government-core-vocabularies) definitions.",
                    "type": "object",
                    "required": [
                      "fullName"
                    ],
                    "properties": {
                      "type": {
                        "title": "Type",
                        "description": "The status of this name for the person, using the nameType codelist.",
                        "type": "string",
                        "enum": [
                          "legal",
                          "translation",
                          "transliteration",
                          "former",
                          "alternative",
                          "birth"
                        ],
                        "codelist": "nameType.csv",
                        "openCodelist": false
                      },
                      "fullName": {
                        "title": "Full Name",
                        "description": "The complete name of the person.",
                        "type": "string"
                      },
                      "familyName": {
                        "title": "Family Name",
                        "description": "Part of the person's `fullName` which is shared by family members. The value may include prefixes or suffixes, e.g. 'de Boer', 'van de Putte', 'von und zu Orlow'. The value may be a multiple-part family name, such as are commonly found in Hispanic countries. For example, Miguel de Cervantes Saavedra's Family Name would be recorded as 'de Cervantes Saavedra.'",
                        "type": "string"
                      },
                      "givenName": {
                        "title": "Given Names",
                        "description": "The part of the person's `fullName` that identifies the person within their family. These are given to a person by their parents at birth or may be legally recognised as 'given names' through a formal process. For example, the given name for Johann Sebastian Bach is 'Johann Sebastian'.",
                        "type": "string"
                      },
                      "patronymicName": {
                        "title": "Patronymic Name",
                        "description": "Part of the person's `fullName` which is inherited from their father, as is common in countries such as Iceland, Ethiopia and Russia. For example, the 'Sergeyevich' in 'Mikhail Sergeyevich Gorbachev'.",
                        "type": "string"
                      }
                    }
                  },
                  "propertyOrder": 10
                },
                "identifiers": {
                  "title": "Identifiers",
                  "description": "One or more official identifiers for this person. Where available, official registration numbers should be provided.",
                  "type": "array",
                  "items": {
                    "title": "Identifier",
                    "description": "An identifier that has been assigned to a person or entity. `scheme` or `schemeName` (or both) MUST be included in an Identifier object.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "ID",
                        "description": "The identifier for a person or entity, as issued by the scheme.",
                        "type": "string"
                      },
                      "scheme": {
                        "title": "Scheme Code",
                        "description": "For entities, a code from org-id.guide (https://www.org-id.guide) for an identifier-issuing authority (e.g. 'GB-COH'). For natural persons, a value with the pattern {JURISDICTION}-{TYPE} where JURISDICTION is an ISO 3166-1 3-digit country code and TYPE is one of PASSPORT, TAXID or IDCARD.",
                        "type": "string"
                      },
                      "schemeName": {
                        "title": "Scheme Name",
                        "description": "The name of the identifier-issuing authority.",
                        "type": "string"
                      },
                      "uri": {
                        "title": "URI",
                        "description": "A canonical URI (https://en.wikipedia.org/wiki/Uniform_Resource_Identifier) for the identifier and associated details of the person or entity, if one exists.",
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "anyOf": [
                      {
                        "required": [
                          "scheme"
                        ]
                      },
                      {
                        "required": [
                          "schemeName"
                        ]
                      },
                      {
                        "required": [
                          "scheme",
                          "schemeName"
                        ]
                      }
                    ]
                  },
                  "propertyOrder": 20
                },
                "nationalities": {
                  "title": "Nationality",
                  "description": "The nationalities held by this person.",
                  "type": "array",
                  "items": {
                    "title": "Country",
                    "description": "A country MUST have a name. A country SHOULD have a 2-letter country code (ISO 3166-1)",
                    "type": "object",
                    "properties": {
                      "name": {
                        "title": "Name",
                        "description": "The name of the country",
                        "type": "string"
                      },
                      "code": {
                        "title": "Country Code",
                        "description": "The 2-letter country code (ISO 3166-1) for this country.",
                        "type": "string",
                        "maxLength": 2,
                        "minLength": 2
                      }
                    },
                    "required": [
                      "name"
                    ]
                  },
                  "propertyOrder": 30
                },
                "placeOfBirth": {
                  "title": "Address",
                  "description": "Semi-structured address details, suitable for processing using address-parsing algorithms. Where postal codes and country information are isolated fields in source systems, this information SHOULD be published in the dedicated fields and SHOULD NOT be published in the `address` field.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Type",
                      "description": "The function of the address, using the addressType codelist.",
                      "type": "string",
                      "enum": [
                        "placeOfBirth",
                        "residence",
                        "registered",
                        "service",
                        "alternative",
                        "business"
                      ],
                      "codelist": "addressType.csv",
                      "openCodelist": false
                    },
                    "address": {
                      "title": "Address",
                      "description": "The address, with each line or component separated by a line-break or comma.",
                      "type": "string"
                    },
                    "postCode": {
                      "title": "Postcode",
                      "description": "The postal code for this address.",
                      "type": "string"
                    },
                    "country": {
                      "title": "Country",
                      "description": "A country MUST have a name. A country SHOULD have a 2-letter country code (ISO 3166-1)",
                      "type": "object",
                      "properties": {
                        "name": {
                          "title": "Name",
                          "description": "The name of the country",
                          "type": "string"
                        },
                        "code": {
                          "title": "Country Code",
                          "description": "The 2-letter country code (ISO 3166-1) for this country.",
                          "type": "string",
                          "maxLength": 2,
                          "minLength": 2
                        }
                      },
                      "required": [
                        "name"
                      ]
                    }
                  }
                },
                "birthDate": {
                  "title": "Date of Birth",
                  "description": "The date of birth for this person, in YYYY, YYYY-MM, or YYYY-MM-DD format.",
                  "type": "string",
                  "anyOf": [
                    {
                      "pattern": "^(\\d{4})(-(1[0-2]|0[1-9]))?$"
                    },
                    {
                      "format": "date"
                    }
                  ],
                  "propertyOrder": 35
                },
                "deathDate": {
                  "title": "Death Date",
                  "description": "The date of death for this person, in YYYY, YYYY-MM, or YYYY-MM-DD format.",
                  "type": "string",
                  "anyOf": [
                    {
                      "pattern": "^(\\d{4})(-(1[0-2]|0[1-9]))?$"
                    },
                    {
                      "format": "date"
                    }
                  ],
                  "propertyOrder": 36
                },
                "taxResidencies": {
                  "title": "Tax Residency",
                  "description": "The tax residencies held by this person, as an array of Country objects.",
                  "type": "array",
                  "items": {
                    "title": "Country",
                    "description": "A country MUST have a name. A country SHOULD have a 2-letter country code (ISO 3166-1)",
                    "type": "object",
                    "properties": {
                      "name": {
                        "title": "Name",
                        "description": "The name of the country",
                        "type": "string"
                      },
                      "code": {
                        "title": "Country Code",
                        "description": "The 2-letter country code (ISO 3166-1) for this country.",
                        "type": "string",
                        "maxLength": 2,
                        "minLength": 2
                      }
                    },
                    "required": [
                      "name"
                    ]
                  },
                  "propertyOrder": 55
                },
                "addresses": {
                  "title": "Addresses",
                  "description": "One or more addresses for this person.",
                  "type": "array",
                  "items": {
                    "title": "Address",
                    "description": "Semi-structured address details, suitable for processing using address-parsing algorithms. Where postal codes and country information are isolated fields in source systems, this information SHOULD be published in the dedicated fields and SHOULD NOT be published in the `address` field.",
                    "type": "object",
                    "properties": {
                      "type": {
                        "title": "Type",
                        "description": "The function of the address, using the addressType codelist.",
                        "type": "string",
                        "enum": [
                          "placeOfBirth",
                          "residence",
                          "registered",
                          "service",
                          "alternative",
                          "business"
                        ],
                        "codelist": "addressType.csv",
                        "openCodelist": false
                      },
                      "address": {
                        "title": "Address",
                        "description": "The address, with each line or component separated by a line-break or comma.",
                        "type": "string"
                      },
                      "postCode": {
                        "title": "Postcode",
                        "description": "The postal code for this address.",
                        "type": "string"
                      },
                      "country": {
                        "title": "Country",
                        "description": "A country MUST have a name. A country SHOULD have a 2-letter country code (ISO 3166-1)",
                        "type": "object",
                        "properties": {
                          "name": {
                            "title": "Name",
                            "description": "The name of the country",
                            "type": "string"
                          },
                          "code": {
                            "title": "Country Code",
                            "description": "The 2-letter country code (ISO 3166-1) for this country.",
                            "type": "string",
                            "maxLength": 2,
                            "minLength": 2
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    }
                  },
                  "propertyOrder": 60
                },
                "politicalExposure": {
                  "type": "object",
                  "title": "Political Exposure",
                  "description": "Information about whether, and how, the person described by this statement is politically exposed. Use this property only if politically exposed person (PEP) declarations are expected as part of beneficial ownership declarations.",
                  "required": [
                    "status"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "title": "Politically Exposed Person (PEP) Status",
                      "description": "This value is 'isPep' or 'isNotPep' according to whether the person described by this statement has the status of politically exposed person (PEP). An 'unknown' value means a PEP status declaration is expected but missing; the reason for the missing data SHOULD be supplied in the `details` array.",
                      "enum": [
                        "isPep",
                        "isNotPep",
                        "unknown"
                      ]
                    },
                    "details": {
                      "type": "array",
                      "title": "Politically Exposed Person (PEP) Details",
                      "description": "One or more descriptions of this person's Politically Exposed Person (PEP) status.",
                      "items": {
                        "title": "PEP Status Details",
                        "description": "Information about a person's political involvement.",
                        "type": "object",
                        "properties": {
                          "reason": {
                            "title": "Reason",
                            "description": "The reason for this person being declared a politically-exposed person.",
                            "type": "string"
                          },
                          "missingInfoReason": {
                            "title": "Missing Information Reasons",
                            "description": "An explanation of why the PEP status for the person is not provided (i.e. `politicalExposure.status` is 'unknown'). This may be a standard descriptive phrase from the source system, or a free text justification. Where this field is present it should be the only field except for `source`.",
                            "type": "string"
                          },
                          "jurisdiction": {
                            "title": "Jurisdiction",
                            "description": "A Jurisdiction MUST have a name. A jurisdiction SHOULD have a 2-letter country code (ISO 3166-1) or a subdivision code (ISO 3166-2).",
                            "type": "object",
                            "properties": {
                              "name": {
                                "title": "Name",
                                "description": "The name of the jurisdiction",
                                "type": "string"
                              },
                              "code": {
                                "title": "Country or Subdivision Code",
                                "description": "The 2-letter country code (ISO 3166-1) or the subdivision code (ISO 3166-2) for the jurisdiction.",
                                "type": "string",
                                "maxLength": 6,
                                "minLength": 2
                              }
                            },
                            "required": [
                              "name"
                            ]
                          },
                          "startDate": {
                            "title": "State Date",
                            "description": "The date from which this person had the status of a Politically-exposed Person (PEP). The date MUST be given in YYYY-MM-DD format. Where a precise month or date are unknown, the value may be rounded to the first day of the (first) month. This rounding SHOULD be noted in accompanying guidance (such as a publication policy or data use guide).",
                            "type": "string",
                            "format": "date"
                          },
                          "endDate": {
                            "title": "End Date",
                            "description": "The date from which this person no longer had the status of a Politically-exposed Person (PEP). The date MUST be given in YYYY-MM-DD format. Where a precise month or date are unknown, the value may be rounded to the first day of the (first) month.  This rounding SHOULD be noted in accompanying guidance (such as a publication policy or data use guide).",
                            "type": "string",
                            "format": "date"
                          },
                          "source": {
                            "title": "Source",
                            "description": "Details describing an information source.",
                            "type": "object",
                            "properties": {
                              "type": {
                                "title": "Source Type",
                                "description": "The types of the source, using the sourceType codelist. Include 'verified' in the array if the information in the Statement has undergone a verification process.",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "selfDeclaration",
                                    "officialRegister",
                                    "thirdParty",
                                    "primaryResearch",
                                    "verified"
                                  ],
                                  "codelist": "sourceType.csv",
                                  "openCodelist": false
                                }
                              },
                              "description": {
                                "title": "Description",
                                "description": "Additional, free text information about the source of information.",
                                "type": "string"
                              },
                              "url": {
                                "title": "Source URL",
                                "description": "The external URL from which this information was fetched, if relevant. Or, if relevant, a URL providing additional detail on how this information was sourced.",
                                "type": "string",
                                "format": "uri"
                              },
                              "retrievedAt": {
                                "title": "Retrieved At",
                                "description": "A timestamp indicating when this information was imported from an external system, in full-date (YYYY-MM-DD) or date-time (e.g. YYYY-MM-DDTHH:MM:SSZ) format. See the IETF RFC3339 standard, section 5.6.",
                                "type": "string",
                                "anyOf": [
                                  {
                                    "format": "date"
                                  },
                                  {
                                    "format": "date-time"
                                  }
                                ]
                              },
                              "assertedBy": {
                                "title": "Asserted By",
                                "description": "The people or organisations providing the information asserted in this Statement. This may include the declaring subject of a self-declaration, or the name of an agent making a declaration on their behalf. If this Statement has been verified, the array may include the name of the organisation providing verification.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "title": "Name",
                                      "description": "The name of the agent making the assertion",
                                      "type": "string"
                                    },
                                    "uri": {
                                      "title": "URI",
                                      "description": "An optional URI to identify the agent making the assertion",
                                      "type": "string",
                                      "format": "uri"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "personType",
                "isComponent"
              ],
              "$defs": {
                "Name": {
                  "title": "Name",
                  "description": "A name by which this person is known. A name MUST be provided in `fullName`, and MAY be broken down in the `familyName`, `givenName` and `patronymicName` fields, based on the EC ISA Core Person Vocabulary (https://joinup.ec.europa.eu/solution/e-government-core-vocabularies) definitions.",
                  "type": "object",
                  "required": [
                    "fullName"
                  ],
                  "properties": {
                    "type": {
                      "title": "Type",
                      "description": "The status of this name for the person, using the nameType codelist.",
                      "type": "string",
                      "enum": [
                        "legal",
                        "translation",
                        "transliteration",
                        "former",
                        "alternative",
                        "birth"
                      ],
                      "codelist": "nameType.csv",
                      "openCodelist": false
                    },
                    "fullName": {
                      "title": "Full Name",
                      "description": "The complete name of the person.",
                      "type": "string"
                    },
                    "familyName": {
                      "title": "Family Name",
                      "description": "Part of the person's `fullName` which is shared by family members. The value may include prefixes or suffixes, e.g. 'de Boer', 'van de Putte', 'von und zu Orlow'. The value may be a multiple-part family name, such as are commonly found in Hispanic countries. For example, Miguel de Cervantes Saavedra's Family Name would be recorded as 'de Cervantes Saavedra.'",
                      "type": "string"
                    },
                    "givenName": {
                      "title": "Given Names",
                      "description": "The part of the person's `fullName` that identifies the person within their family. These are given to a person by their parents at birth or may be legally recognised as 'given names' through a formal process. For example, the given name for Johann Sebastian Bach is 'Johann Sebastian'.",
                      "type": "string"
                    },
                    "patronymicName": {
                      "title": "Patronymic Name",
                      "description": "Part of the person's `fullName` which is inherited from their father, as is common in countries such as Iceland, Ethiopia and Russia. For example, the 'Sergeyevich' in 'Mikhail Sergeyevich Gorbachev'.",
                      "type": "string"
                    }
                  }
                },
                "PepStatusDetails": {
                  "title": "PEP Status Details",
                  "description": "Information about a person's political involvement.",
                  "type": "object",
                  "properties": {
                    "reason": {
                      "title": "Reason",
                      "description": "The reason for this person being declared a politically-exposed person.",
                      "type": "string"
                    },
                    "missingInfoReason": {
                      "title": "Missing Information Reasons",
                      "description": "An explanation of why the PEP status for the person is not provided (i.e. `politicalExposure.status` is 'unknown'). This may be a standard descriptive phrase from the source system, or a free text justification. Where this field is present it should be the only field except for `source`.",
                      "type": "string"
                    },
                    "jurisdiction": {
                      "title": "Jurisdiction",
                      "description": "A Jurisdiction MUST have a name. A jurisdiction SHOULD have a 2-letter country code (ISO 3166-1) or a subdivision code (ISO 3166-2).",
                      "type": "object",
                      "properties": {
                        "name": {
                          "title": "Name",
                          "description": "The name of the jurisdiction",
                          "type": "string"
                        },
                        "code": {
                          "title": "Country or Subdivision Code",
                          "description": "The 2-letter country code (ISO 3166-1) or the subdivision code (ISO 3166-2) for the jurisdiction.",
                          "type": "string",
                          "maxLength": 6,
                          "minLength": 2
                        }
                      },
                      "required": [
                        "name"
                      ]
                    },
                    "startDate": {
                      "title": "State Date",
                      "description": "The date from which this person had the status of a Politically-exposed Person (PEP). The date MUST be given in YYYY-MM-DD format. Where a precise month or date are unknown, the value may be rounded to the first day of the (first) month. This rounding SHOULD be noted in accompanying guidance (such as a publication policy or data use guide).",
                      "type": "string",
                      "format": "date"
                    },
                    "endDate": {
                      "title": "End Date",
                      "description": "The date from which this person no longer had the status of a Politically-exposed Person (PEP). The date MUST be given in YYYY-MM-DD format. Where a precise month or date are unknown, the value may be rounded to the first day of the (first) month.  This rounding SHOULD be noted in accompanying guidance (such as a publication policy or data use guide).",
                      "type": "string",
                      "format": "date"
                    },
                    "source": {
                      "title": "Source",
                      "description": "Details describing an information source.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "title": "Source Type",
                          "description": "The types of the source, using the sourceType codelist. Include 'verified' in the array if the information in the Statement has undergone a verification process.",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "selfDeclaration",
                              "officialRegister",
                              "thirdParty",
                              "primaryResearch",
                              "verified"
                            ],
                            "codelist": "sourceType.csv",
                            "openCodelist": false
                          }
                        },
                        "description": {
                          "title": "Description",
                          "description": "Additional, free text information about the source of information.",
                          "type": "string"
                        },
                        "url": {
                          "title": "Source URL",
                          "description": "The external URL from which this information was fetched, if relevant. Or, if relevant, a URL providing additional detail on how this information was sourced.",
                          "type": "string",
                          "format": "uri"
                        },
                        "retrievedAt": {
                          "title": "Retrieved At",
                          "description": "A timestamp indicating when this information was imported from an external system, in full-date (YYYY-MM-DD) or date-time (e.g. YYYY-MM-DDTHH:MM:SSZ) format. See the IETF RFC3339 standard, section 5.6.",
                          "type": "string",
                          "anyOf": [
                            {
                              "format": "date"
                            },
                            {
                              "format": "date-time"
                            }
                          ]
                        },
                        "assertedBy": {
                          "title": "Asserted By",
                          "description": "The people or organisations providing the information asserted in this Statement. This may include the declaring subject of a self-declaration, or the name of an agent making a declaration on their behalf. If this Statement has been verified, the array may include the name of the organisation providing verification.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "title": "Name",
                                "description": "The name of the agent making the assertion",
                                "type": "string"
                              },
                              "uri": {
                                "title": "URI",
                                "description": "An optional URI to identify the agent making the assertion",
                                "type": "string",
                                "format": "uri"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "if": {
          "properties": {
            "recordType": {
              "const": "relationship"
            }
          }
        },
        "then": {
          "properties": {
            "recordDetails": {
              "$id": "urn:relationship",
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "version": "0.4",
              "title": "Relationship Record Details",
              "description": "Information about the interests that an interested party (a person or entity) holds in the subject (an entity).",
              "type": "object",
              "properties": {
                "isComponent": {
                  "title": "Is component",
                  "description": "Whether this relationship is a component of a wider indirect relationship. Where `isComponent` is 'true': (1) the `recordId` of this secondary Relationship Statement MUST be an element in the `componentRecords` array of that primary Relationship Statement, (2) this Relationship Statement MUST come before that primary Relationship Statement in a BODS package or stream, (3) the replacement of this Relationship Statement SHOULD be considered when replacing the primary Relationship Statement, and (4) the primary Relationship Statement MUST have an `isComponent` value of 'false'. Where `isComponent` is 'false', this Relationship Statement is the primary declaration of the relationship between the `subject` and the `interestedParty`.",
                  "type": "boolean"
                },
                "componentRecords": {
                  "title": "Component Record IDs",
                  "description": "The `recordId` values of all component records that provide detail about this relationship between the `subject` and the `interestedParty` (if it is indirect). If this relationship has components, its own `isComponent` value MUST be 'false'.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "subject": {
                  "title": "Subject",
                  "description": "The `recordId` for the subject of the relationship, or a reason why the subject cannot be specified. The subject MUST be an entity.",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "title": "Unspecified or unknown person or entity",
                      "description": "A `reason` MUST be supplied.",
                      "type": "object",
                      "properties": {
                        "reason": {
                          "title": "Reason",
                          "description": "The reason that a person or entity cannot be specified, using the unspecifiedReason codelist.",
                          "type": "string",
                          "enum": [
                            "noBeneficialOwners",
                            "subjectUnableToConfirmOrIdentifyBeneficialOwner",
                            "interestedPartyHasNotProvidedInformation",
                            "subjectExemptFromDisclosure",
                            "interestedPartyExemptFromDisclosure",
                            "unknown",
                            "informationUnknownToPublisher"
                          ],
                          "codelist": "unspecifiedReason.csv",
                          "openCodelist": false
                        },
                        "description": {
                          "title": "Description",
                          "description": "Additional information about the absence of details for a person or entity. This field may be used to provide set phrases from a source system, or a free text explanation.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "reason"
                      ]
                    }
                  ]
                },
                "interestedParty": {
                  "title": "Interested Party",
                  "description": "The `recordId` for the interested party in the relationship, or an Unspecified Record object with a reason for why this information has not been disclosed. The interested party MAY be an entity or a person. An Unspecified Record SHOULD only be used where no information at all is known about interested parties beyond this point of the beneficial ownership network. If the interested party is known to be an entity or person but their particular identity is unavailable, a `recordId` for them SHOULD be provided here (and the their `recordDetails.[person|entity]Type` should indicate that they are anonymous or unknown).",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "title": "Unspecified or unknown person or entity",
                      "description": "A `reason` MUST be supplied.",
                      "type": "object",
                      "properties": {
                        "reason": {
                          "title": "Reason",
                          "description": "The reason that a person or entity cannot be specified, using the unspecifiedReason codelist.",
                          "type": "string",
                          "enum": [
                            "noBeneficialOwners",
                            "subjectUnableToConfirmOrIdentifyBeneficialOwner",
                            "interestedPartyHasNotProvidedInformation",
                            "subjectExemptFromDisclosure",
                            "interestedPartyExemptFromDisclosure",
                            "unknown",
                            "informationUnknownToPublisher"
                          ],
                          "codelist": "unspecifiedReason.csv",
                          "openCodelist": false
                        },
                        "description": {
                          "title": "Description",
                          "description": "Additional information about the absence of details for a person or entity. This field may be used to provide set phrases from a source system, or a free text explanation.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "reason"
                      ]
                    }
                  ]
                },
                "interests": {
                  "title": "Interests",
                  "description": "A description of the interests held by the interested party in the subject.",
                  "type": "array",
                  "items": {
                    "title": "Interest",
                    "description": "A description of an interest held by an interestedParty in the subject.",
                    "type": "object",
                    "properties": {
                      "type": {
                        "title": "Type of Interest",
                        "description": "The nature of the interest, using the interestType codelist.",
                        "type": "string",
                        "enum": [
                          "shareholding",
                          "votingRights",
                          "appointmentOfBoard",
                          "otherInfluenceOrControl",
                          "seniorManagingOfficial",
                          "settlor",
                          "trustee",
                          "protector",
                          "beneficiaryOfLegalArrangement",
                          "rightsToSurplusAssetsOnDissolution",
                          "rightsToProfitOrIncome",
                          "rightsGrantedByContract",
                          "conditionalRightsGrantedByContract",
                          "controlViaCompanyRulesOrArticles",
                          "controlByLegalFramework",
                          "boardMember",
                          "boardChair",
                          "unknownInterest",
                          "unpublishedInterest",
                          "enjoymentAndUseOfAssets",
                          "rightToProfitOrIncomeFromAssets",
                          "nominee",
                          "nominator"
                        ],
                        "codelist": "interestType.csv",
                        "openCodelist": false
                      },
                      "directOrIndirect": {
                        "title": "Direct or Indirect",
                        "description": "How directly the interest is exercised by the interested party. The value MUST be 'indirect' if intermediate entities or agents are known to exist, and MUST be 'direct' if such intermediaries are known not to exist. Otherwise the value MUST be 'unknown'.",
                        "type": "string",
                        "enum": [
                          "direct",
                          "indirect",
                          "unknown"
                        ],
                        "codelist": "directOrIndirect.csv",
                        "openCodelist": false
                      },
                      "beneficialOwnershipOrControl": {
                        "title": "Beneficial Ownership or Control",
                        "description": "Whether this interest (alone or with others) means the interested party is a beneficial owner of the subject. If 'true' the interested party MUST be a natural person. The definition of 'beneficial owner' in operation SHOULD be noted in accompanying guidance (such as a publication policy or data use guide).",
                        "type": "boolean"
                      },
                      "details": {
                        "title": "Details",
                        "description": "The local name given to this kind of interest, or further information (semi-structured or unstructured) to clarify the nature of the interest.",
                        "type": "string"
                      },
                      "share": {
                        "title": "Percentage Share",
                        "description": "The proportion of this type of interest held by the interested party, where an interest is countable. Provide the `exact` percentage if known. Otherwise, `minimum` (or `exclusiveMinimum`) and `maximum` (or `exclusiveMaximum`) can be used to record the range into which the proportion falls. (The `minimum` and `maximum` values are inclusive.)",
                        "type": "object",
                        "properties": {
                          "exact": {
                            "title": "Exact percentage",
                            "description": "The exact share of this interest held (if available).",
                            "type": "number",
                            "maximum": 100,
                            "minimum": 0
                          },
                          "maximum": {
                            "title": "Maximum Percentage",
                            "description": "The inclusive upper bound of the share of this interest.",
                            "type": "number",
                            "maximum": 100,
                            "minimum": 0
                          },
                          "minimum": {
                            "title": "Minimum Percentage",
                            "description": "The inclusive lower bound of the share of this interest.",
                            "type": "number",
                            "maximum": 100,
                            "minimum": 0
                          },
                          "exclusiveMinimum": {
                            "title": "Exclusive Minimum percentage",
                            "description": "The exclusive lower bound of the share of this interest.",
                            "type": "number",
                            "maximum": 100,
                            "minimum": 0
                          },
                          "exclusiveMaximum": {
                            "title": "Exclusive Maximum Percentage",
                            "description": "The exclusive upper bound of the share of this interest.",
                            "type": "number",
                            "maximum": 100,
                            "minimum": 0
                          }
                        }
                      },
                      "startDate": {
                        "title": "Start Date",
                        "description": "The date from which this interest was active. The date MUST be given in YYYY-MM-DD format. Where a precise month or date are unknown, the value may be rounded to the first day of the (first) month. This rounding SHOULD be noted in accompanying guidance (such as a publication policy or data use guide).",
                        "type": "string",
                        "format": "date"
                      },
                      "endDate": {
                        "title": "End Date",
                        "description": "The date from which this interest ceased to exist. The date MUST be given in YYYY-MM-DD format. Where a precise month or date are unknown, the value may be rounded to the first day of the (first) month. This rounding SHOULD be noted in accompanying guidance (such as a publication policy or data use guide).",
                        "type": "string",
                        "format": "date"
                      }
                    }
                  }
                }
              },
              "required": [
                "isComponent",
                "subject",
                "interestedParty"
              ],
              "if": {
                "properties": {
                  "isComponent": {
                    "const": true
                  }
                }
              },
              "then": {
                "properties": {
                  "componentRecords": {
                    "const": []
                  }
                }
              },
              "$defs": {
                "Interest": {
                  "title": "Interest",
                  "description": "A description of an interest held by an interestedParty in the subject.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Type of Interest",
                      "description": "The nature of the interest, using the interestType codelist.",
                      "type": "string",
                      "enum": [
                        "shareholding",
                        "votingRights",
                        "appointmentOfBoard",
                        "otherInfluenceOrControl",
                        "seniorManagingOfficial",
                        "settlor",
                        "trustee",
                        "protector",
                        "beneficiaryOfLegalArrangement",
                        "rightsToSurplusAssetsOnDissolution",
                        "rightsToProfitOrIncome",
                        "rightsGrantedByContract",
                        "conditionalRightsGrantedByContract",
                        "controlViaCompanyRulesOrArticles",
                        "controlByLegalFramework",
                        "boardMember",
                        "boardChair",
                        "unknownInterest",
                        "unpublishedInterest",
                        "enjoymentAndUseOfAssets",
                        "rightToProfitOrIncomeFromAssets",
                        "nominee",
                        "nominator"
                      ],
                      "codelist": "interestType.csv",
                      "openCodelist": false
                    },
                    "directOrIndirect": {
                      "title": "Direct or Indirect",
                      "description": "How directly the interest is exercised by the interested party. The value MUST be 'indirect' if intermediate entities or agents are known to exist, and MUST be 'direct' if such intermediaries are known not to exist. Otherwise the value MUST be 'unknown'.",
                      "type": "string",
                      "enum": [
                        "direct",
                        "indirect",
                        "unknown"
                      ],
                      "codelist": "directOrIndirect.csv",
                      "openCodelist": false
                    },
                    "beneficialOwnershipOrControl": {
                      "title": "Beneficial Ownership or Control",
                      "description": "Whether this interest (alone or with others) means the interested party is a beneficial owner of the subject. If 'true' the interested party MUST be a natural person. The definition of 'beneficial owner' in operation SHOULD be noted in accompanying guidance (such as a publication policy or data use guide).",
                      "type": "boolean"
                    },
                    "details": {
                      "title": "Details",
                      "description": "The local name given to this kind of interest, or further information (semi-structured or unstructured) to clarify the nature of the interest.",
                      "type": "string"
                    },
                    "share": {
                      "title": "Percentage Share",
                      "description": "The proportion of this type of interest held by the interested party, where an interest is countable. Provide the `exact` percentage if known. Otherwise, `minimum` (or `exclusiveMinimum`) and `maximum` (or `exclusiveMaximum`) can be used to record the range into which the proportion falls. (The `minimum` and `maximum` values are inclusive.)",
                      "type": "object",
                      "properties": {
                        "exact": {
                          "title": "Exact percentage",
                          "description": "The exact share of this interest held (if available).",
                          "type": "number",
                          "maximum": 100,
                          "minimum": 0
                        },
                        "maximum": {
                          "title": "Maximum Percentage",
                          "description": "The inclusive upper bound of the share of this interest.",
                          "type": "number",
                          "maximum": 100,
                          "minimum": 0
                        },
                        "minimum": {
                          "title": "Minimum Percentage",
                          "description": "The inclusive lower bound of the share of this interest.",
                          "type": "number",
                          "maximum": 100,
                          "minimum": 0
                        },
                        "exclusiveMinimum": {
                          "title": "Exclusive Minimum percentage",
                          "description": "The exclusive lower bound of the share of this interest.",
                          "type": "number",
                          "maximum": 100,
                          "minimum": 0
                        },
                        "exclusiveMaximum": {
                          "title": "Exclusive Maximum Percentage",
                          "description": "The exclusive upper bound of the share of this interest.",
                          "type": "number",
                          "maximum": 100,
                          "minimum": 0
                        }
                      }
                    },
                    "startDate": {
                      "title": "Start Date",
                      "description": "The date from which this interest was active. The date MUST be given in YYYY-MM-DD format. Where a precise month or date are unknown, the value may be rounded to the first day of the (first) month. This rounding SHOULD be noted in accompanying guidance (such as a publication policy or data use guide).",
                      "type": "string",
                      "format": "date"
                    },
                    "endDate": {
                      "title": "End Date",
                      "description": "The date from which this interest ceased to exist. The date MUST be given in YYYY-MM-DD format. Where a precise month or date are unknown, the value may be rounded to the first day of the (first) month. This rounding SHOULD be noted in accompanying guidance (such as a publication policy or data use guide).",
                      "type": "string",
                      "format": "date"
                    }
                  }
                }
              }
            }
          }
        }
      }
    ],
    "required": [
      "statementId",
      "declarationSubject",
      "recordId",
      "recordType",
      "recordDetails",
      "statementDate"
    ]
  },
  "$defs": {
    "Statement": {
      "title": "Statement",
      "description": "A claim about a person, entity or relationship, made at a particular point in time.",
      "type": "object",
      "properties": {
        "statementId": {
          "title": "Statement Identifier",
          "description": "A persistent globally unique identifier for this Statement. Length MUST be 32 - 64 characters (inclusive).",
          "type": "string",
          "minLength": 32,
          "maxLength": 64
        },
        "statementDate": {
          "title": "Statement Date",
          "description": "The date on which this statement was declared by the source, in full-date (YYYY-MM-DD) or date-time (e.g. YYYY-MM-DDTHH:MM:SSZ) format. See the IETF RFC3339 standard, section 5.6.",
          "type": "string",
          "anyOf": [
            {
              "format": "date"
            },
            {
              "format": "date-time"
            }
          ]
        },
        "annotations": {
          "title": "Annotations",
          "description": "Annotations about this Statement or parts of this Statement",
          "type": "array",
          "items": {
            "title": "Annotation",
            "description": "Additional information about the data contained in this Statement. Annotations can apply to a whole statement, an object or a single field. Custom properties can be included within the Annotation object to provide structured data where required.",
            "type": "object",
            "properties": {
              "statementPointerTarget": {
                "title": "Statement Fragment Pointer",
                "description": "An RFC6901 JSON Pointer (https://tools.ietf.org/html/rfc6901) describing the target fragment of the statement that this Annotation applies to, starting from the root of the Statement. An empty string (\"\") indicates that the Annotation applies to the whole Statement.",
                "type": "string"
              },
              "creationDate": {
                "title": "Creation Date",
                "description": "The date on which this Annotation was created, in full-date (YYYY-MM-DD) or date-time (e.g. YYYY-MM-DDTHH:MM:SSZ) format. See the IETF RFC3339 standard, section 5.6.",
                "type": "string",
                "anyOf": [
                  {
                    "format": "date"
                  },
                  {
                    "format": "date-time"
                  }
                ]
              },
              "createdBy": {
                "title": "Created By",
                "description": "The person, organisation or agent that created this Annotation.",
                "type": "object",
                "properties": {
                  "name": {
                    "title": "Name",
                    "description": "The name of the person, organisation or agent that created this Annotation.",
                    "type": "string"
                  },
                  "uri": {
                    "title": "URI",
                    "description": "An optional URI to identify the person, organisation or agent that created this Annotation.",
                    "type": "string",
                    "format": "uri"
                  }
                }
              },
              "motivation": {
                "title": "Motivation",
                "description": "The reason for this Annotation, using the annotationMotivation codelist.",
                "type": "string",
                "enum": [
                  "commenting",
                  "correcting",
                  "identifying",
                  "linking",
                  "transformation"
                ],
                "codelist": "annotationMotivation.csv",
                "openCodelist": false
              },
              "description": {
                "title": "Description",
                "description": "A free text description providing extra information about part of this Statement.",
                "type": "string"
              },
              "transformedContent": {
                "type": "string",
                "title": "Transformed Content",
                "description": "A representation of the Annotation target after the transformation in the `description` field has been applied. This field MUST only be used when the `motivation` is 'transformation'."
              },
              "url": {
                "title": "URL",
                "description": "A linked resource that annotates, provides context for or enhances this Statement. The content of the resource, or the relationship to the statement, MAY be described in the `description` field. This field is REQUIRED if the value of `motivation` is 'linking'.",
                "type": "string",
                "format": "uri"
              }
            },
            "allOf": [
              {
                "if": {
                  "properties": {
                    "motivation": {
                      "const": "linking"
                    }
                  }
                },
                "then": {
                  "required": [
                    "statementPointerTarget",
                    "motivation",
                    "url"
                  ]
                },
                "else": {
                  "required": [
                    "statementPointerTarget",
                    "motivation"
                  ]
                }
              },
              {
                "if": {
                  "not": {
                    "properties": {
                      "motivation": {
                        "const": "transformation"
                      }
                    }
                  }
                },
                "then": {
                  "properties": {
                    "transformedContent": {
                      "const": ""
                    }
                  }
                }
              }
            ]
          }
        },
        "publicationDetails": {
          "title": "Publication Details",
          "description": "Information concerning the publication of this Statement.",
          "type": "object",
          "properties": {
            "publicationDate": {
              "title": "Publication date",
              "description": "The date on which this statement was published, in full-date (YYYY-MM-DD) or date-time (e.g. YYYY-MM-DDTHH:MM:SSZ) format. See the IETF RFC3339 standard, section 5.6.",
              "type": "string",
              "anyOf": [
                {
                  "format": "date"
                },
                {
                  "format": "date-time"
                }
              ]
            },
            "bodsVersion": {
              "title": "BODS Version",
              "description": "The version of the Beneficial Ownership Data Standard to which this Statement conforms, expressed as major.minor (e.g. 0.2 or 1.0). In a published BODS dataset, all Statements MUST have the same major version number.",
              "type": "string",
              "pattern": "^(\\d+\\.)(\\d+)$"
            },
            "license": {
              "title": "License URL",
              "description": "A link to the license that applies to this Statement. The canonical URI of the license SHOULD be used. Publishers are encouraged to use a Public Domain Dedication or Open Definition Conformant (http://opendefinition.org/licenses/) license.",
              "type": "string",
              "format": "uri"
            },
            "publisher": {
              "type": "object",
              "title": "Publisher",
              "description": "Details of the organisation or person publishing a Statement.",
              "properties": {
                "name": {
                  "title": "Name",
                  "description": "The name of the publisher.",
                  "type": "string"
                },
                "url": {
                  "title": "URL",
                  "description": "The URL where details of the full dataset, or of the publisher, can be found.",
                  "type": "string",
                  "format": "uri"
                }
              },
              "anyOf": [
                {
                  "required": [
                    "name"
                  ]
                },
                {
                  "required": [
                    "url"
                  ]
                }
              ]
            }
          },
          "required": [
            "publicationDate",
            "bodsVersion",
            "publisher"
          ]
        },
        "source": {
          "title": "Source",
          "description": "Details describing an information source.",
          "type": "object",
          "properties": {
            "type": {
              "title": "Source Type",
              "description": "The types of the source, using the sourceType codelist. Include 'verified' in the array if the information in the Statement has undergone a verification process.",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "selfDeclaration",
                  "officialRegister",
                  "thirdParty",
                  "primaryResearch",
                  "verified"
                ],
                "codelist": "sourceType.csv",
                "openCodelist": false
              }
            },
            "description": {
              "title": "Description",
              "description": "Additional, free text information about the source of information.",
              "type": "string"
            },
            "url": {
              "title": "Source URL",
              "description": "The external URL from which this information was fetched, if relevant. Or, if relevant, a URL providing additional detail on how this information was sourced.",
              "type": "string",
              "format": "uri"
            },
            "retrievedAt": {
              "title": "Retrieved At",
              "description": "A timestamp indicating when this information was imported from an external system, in full-date (YYYY-MM-DD) or date-time (e.g. YYYY-MM-DDTHH:MM:SSZ) format. See the IETF RFC3339 standard, section 5.6.",
              "type": "string",
              "anyOf": [
                {
                  "format": "date"
                },
                {
                  "format": "date-time"
                }
              ]
            },
            "assertedBy": {
              "title": "Asserted By",
              "description": "The people or organisations providing the information asserted in this Statement. This may include the declaring subject of a self-declaration, or the name of an agent making a declaration on their behalf. If this Statement has been verified, the array may include the name of the organisation providing verification.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "title": "Name",
                    "description": "The name of the agent making the assertion",
                    "type": "string"
                  },
                  "uri": {
                    "title": "URI",
                    "description": "An optional URI to identify the agent making the assertion",
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            }
          }
        },
        "declaration": {
          "title": "Declaration Reference",
          "description": "An identifier or reference for a declaration within the publisher\u2019s system. Where a Statement is a claim from a particular declaration (made at a point in time by a `source` about a `declarationSubject`) this field identifies the declaration.",
          "type": "string"
        },
        "declarationSubject": {
          "title": "Declaration Subject",
          "description": "A `recordId` value for the subject of a beneficial ownership network (always an entity or person).",
          "type": "string"
        },
        "recordId": {
          "title": "Record Identifier",
          "description": "A unique identifier for the record (within the publisher's system) to which this Statement relates. (A record captures information about an entity, natural person or relationship within the beneficial ownership network of a particular declaration subject.)",
          "type": "string"
        },
        "recordType": {
          "title": "Record Type",
          "description": "The type of record (within the publisher's system) to which this Statement relates: entity, person, or relationship.",
          "type": "string",
          "enum": [
            "entity",
            "person",
            "relationship"
          ],
          "codelist": "recordType.csv",
          "openCodelist": false
        },
        "recordStatus": {
          "title": "Record Status",
          "description": "The lifecycle status of the record (within the publisher's system) to which this Statement relates, using the recordStatus codelist.",
          "type": "string",
          "enum": [
            "new",
            "updated",
            "closed"
          ],
          "codelist": "recordStatus.csv",
          "openCodelist": false
        },
        "recordDetails": {
          "title": "Record Details",
          "description": "The details of the entity, person or relationship as declared on the Statement Date.",
          "type": "object"
        }
      },
      "allOf": [
        {
          "if": {
            "properties": {
              "recordType": {
                "const": "entity"
              }
            }
          },
          "then": {
            "properties": {
              "recordDetails": {
                "$id": "urn:entity",
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "version": "0.4",
                "title": "Entity Record Details",
                "description": "Information about an entity.",
                "type": "object",
                "properties": {
                  "isComponent": {
                    "title": "Is component",
                    "description": "Whether this entity is a component in an indirect relationship. Where `isComponent` is 'true': (1) the `recordId` of this entity MUST be an element in the `componentRecords` array of that primary Relationship Statement, (2) this Entity Statement MUST come before that primary Relationship Statement in a BODS package or stream, (3) the replacement of this Entity Statement SHOULD be considered when replacing the primary Relationship Statement. The primary Relationship statement MUST have a `isComponent` value of 'false'.",
                    "type": "boolean"
                  },
                  "entityType": {
                    "type": "object",
                    "title": "Entity Type",
                    "description": "The form of the entity described in the Statement.",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "title": "Type",
                        "description": "The general form of the entity, using the entityType codelist.",
                        "codelist": "entityType.csv",
                        "enum": [
                          "registeredEntity",
                          "legalEntity",
                          "arrangement",
                          "anonymousEntity",
                          "unknownEntity",
                          "state",
                          "stateBody"
                        ]
                      },
                      "subtype": {
                        "type": "string",
                        "title": "Subtype",
                        "description": "The particular form of the entity, where relevant, using the entitySubtype codelist. The value MUST align with the `entityType` value.",
                        "codelist": "entitySubtype.csv",
                        "enum": [
                          "governmentDepartment",
                          "stateAgency",
                          "other",
                          "trust",
                          "nomination"
                        ],
                        "openCodelist": false
                      },
                      "details": {
                        "type": "string",
                        "title": "Details",
                        "description": "This may be used to provide a local name for this type of entity, or any further information to identify the type of entity. For example, in Finland 'ministeri\u00f6' for a government department."
                      }
                    },
                    "propertyOrder": 4,
                    "allOf": [
                      {
                        "if": {
                          "properties": {
                            "type": {
                              "enum": [
                                "arrangement"
                              ]
                            }
                          }
                        },
                        "then": {
                          "properties": {
                            "subtype": {
                              "enum": [
                                "trust",
                                "nomination",
                                "other"
                              ]
                            }
                          }
                        }
                      },
                      {
                        "if": {
                          "properties": {
                            "type": {
                              "enum": [
                                "legalEntity"
                              ]
                            }
                          }
                        },
                        "then": {
                          "properties": {
                            "subtype": {
                              "enum": [
                                "trust",
                                "other"
                              ]
                            }
                          }
                        }
                      },
                      {
                        "if": {
                          "properties": {
                            "type": {
                              "enum": [
                                "stateBody"
                              ]
                            }
                          }
                        },
                        "then": {
                          "properties": {
                            "subtype": {
                              "enum": [
                                "governmentDepartment",
                                "stateAgency",
                                "other"
                              ]
                            }
                          }
                        }
                      },
                      {
                        "if": {
                          "properties": {
                            "type": {
                              "enum": [
                                "registeredEntity",
                                "state",
                                "anonymousEntity",
                                "unknownEntity"
                              ]
                            }
                          }
                        },
                        "then": {
                          "properties": {
                            "subtype": {
                              "enum": [
                                "other"
                              ]
                            }
                          }
                        }
                      }
                    ]
                  },
                  "unspecifiedEntityDetails": {
                    "title": "Unspecified or unknown person or entity",
                    "description": "A `reason` MUST be supplied.",
                    "type": "object",
                    "properties": {
                      "reason": {
                        "title": "Reason",
                        "description": "The reason that a person or entity cannot be specified, using the unspecifiedReason codelist.",
                        "type": "string",
                        "enum": [
                          "noBeneficialOwners",
                          "subjectUnableToConfirmOrIdentifyBeneficialOwner",
                          "interestedPartyHasNotProvidedInformation",
                          "subjectExemptFromDisclosure",
                          "interestedPartyExemptFromDisclosure",
                          "unknown",
                          "informationUnknownToPublisher"
                        ],
                        "codelist": "unspecifiedReason.csv",
                        "openCodelist": false
                      },
                      "description": {
                        "title": "Description",
                        "description": "Additional information about the absence of details for a person or entity. This field may be used to provide set phrases from a source system, or a free text explanation.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "reason"
                    ]
                  },
                  "name": {
                    "title": "Entity Name",
                    "description": "The declared name of this entity.",
                    "type": "string",
                    "propertyOrder": 10
                  },
                  "alternateNames": {
                    "title": "Alternative Names",
                    "description": "An array of other names this entity is known by.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "title": "Name",
                      "description": "A name this entity is known by."
                    },
                    "propertyOrder": 12
                  },
                  "jurisdiction": {
                    "title": "Jurisdiction",
                    "description": "A Jurisdiction MUST have a name. A jurisdiction SHOULD have a 2-letter country code (ISO 3166-1) or a subdivision code (ISO 3166-2).",
                    "type": "object",
                    "properties": {
                      "name": {
                        "title": "Name",
                        "description": "The name of the jurisdiction",
                        "type": "string"
                      },
                      "code": {
                        "title": "Country or Subdivision Code",
                        "description": "The 2-letter country code (ISO 3166-1) or the subdivision code (ISO 3166-2) for the jurisdiction.",
                        "type": "string",
                        "maxLength": 6,
                        "minLength": 2
                      }
                    },
                    "required": [
                      "name"
                    ]
                  },
                  "identifiers": {
                    "title": "Identifiers",
                    "description": "One or more official identifiers for this entity. Where available, official registration numbers should be provided.",
                    "type": "array",
                    "items": {
                      "title": "Identifier",
                      "description": "An identifier that has been assigned to a person or entity. `scheme` or `schemeName` (or both) MUST be included in an Identifier object.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "ID",
                          "description": "The identifier for a person or entity, as issued by the scheme.",
                          "type": "string"
                        },
                        "scheme": {
                          "title": "Scheme Code",
                          "description": "For entities, a code from org-id.guide (https://www.org-id.guide) for an identifier-issuing authority (e.g. 'GB-COH'). For natural persons, a value with the pattern {JURISDICTION}-{TYPE} where JURISDICTION is an ISO 3166-1 3-digit country code and TYPE is one of PASSPORT, TAXID or IDCARD.",
                          "type": "string"
                        },
                        "schemeName": {
                          "title": "Scheme Name",
                          "description": "The name of the identifier-issuing authority.",
                          "type": "string"
                        },
                        "uri": {
                          "title": "URI",
                          "description": "A canonical URI (https://en.wikipedia.org/wiki/Uniform_Resource_Identifier) for the identifier and associated details of the person or entity, if one exists.",
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "anyOf": [
                        {
                          "required": [
                            "scheme"
                          ]
                        },
                        {
                          "required": [
                            "schemeName"
                          ]
                        },
                        {
                          "required": [
                            "scheme",
                            "schemeName"
                          ]
                        }
                      ]
                    },
                    "propertyOrder": 20
                  },
                  "foundingDate": {
                    "title": "Founding Date",
                    "description": "The date on which this entity was founded, created or registered. The date MUST be given in YYYY-MM-DD format. Where a precise month or date are not available, the value may be rounded to the first day of the (first) month. This rounding SHOULD be noted in accompanying guidance (such as a publication policy or data use guide).",
                    "type": "string",
                    "format": "date",
                    "propertyOrder": 30
                  },
                  "dissolutionDate": {
                    "title": "Dissolution Date",
                    "description": "The date on which this entity was dissolved or ceased, if it is no longer active. The date MUST be given in YYYY-MM-DD format. Where a precise month or date are not available, the value may be rounded to the first day of the (first) month. This rounding SHOULD be noted in accompanying guidance (such as a publication policy or data use guide).",
                    "type": "string",
                    "format": "date",
                    "propertyOrder": 35
                  },
                  "addresses": {
                    "title": "Addresses",
                    "description": "One or more addresses for this entity.",
                    "type": "array",
                    "items": {
                      "title": "Address",
                      "description": "Semi-structured address details, suitable for processing using address-parsing algorithms. Where postal codes and country information are isolated fields in source systems, this information SHOULD be published in the dedicated fields and SHOULD NOT be published in the `address` field.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "title": "Type",
                          "description": "The function of the address, using the addressType codelist.",
                          "type": "string",
                          "enum": [
                            "placeOfBirth",
                            "residence",
                            "registered",
                            "service",
                            "alternative",
                            "business"
                          ],
                          "codelist": "addressType.csv",
                          "openCodelist": false
                        },
                        "address": {
                          "title": "Address",
                          "description": "The address, with each line or component separated by a line-break or comma.",
                          "type": "string"
                        },
                        "postCode": {
                          "title": "Postcode",
                          "description": "The postal code for this address.",
                          "type": "string"
                        },
                        "country": {
                          "title": "Country",
                          "description": "A country MUST have a name. A country SHOULD have a 2-letter country code (ISO 3166-1)",
                          "type": "object",
                          "properties": {
                            "name": {
                              "title": "Name",
                              "description": "The name of the country",
                              "type": "string"
                            },
                            "code": {
                              "title": "Country Code",
                              "description": "The 2-letter country code (ISO 3166-1) for this country.",
                              "type": "string",
                              "maxLength": 2,
                              "minLength": 2
                            }
                          },
                          "required": [
                            "name"
                          ]
                        }
                      }
                    },
                    "propertyOrder": 40
                  },
                  "uri": {
                    "title": "URI",
                    "description": "Where a persistent URI (https://en.wikipedia.org/wiki/Uniform_Resource_Identifier) is available for this entity this should be included.",
                    "type": "string",
                    "format": "uri",
                    "propertyOrder": 21
                  },
                  "publicListing": {
                    "type": "object",
                    "title": "Public Listing",
                    "description": "Details of a publicly listed company, its securities (shares and other tradable financial instruments related to the entity), and related regulatory filings.",
                    "required": [
                      "hasPublicListing"
                    ],
                    "minProperties": 1,
                    "properties": {
                      "hasPublicListing": {
                        "type": "boolean",
                        "title": "Has Public Listing",
                        "description": "Whether the entity is a publicly listed company."
                      },
                      "companyFilingsURLs": {
                        "type": "array",
                        "title": "Company Filings URLs",
                        "description": "URL or URLs where regulatory filings related to major holdings can be retrieved. URLs may point to pages maintained by regulatory bodies, stock exchanges or by the company itself.",
                        "items": {
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "securitiesListings": {
                        "type": "array",
                        "title": "Securities Listings",
                        "description": "Details of the entity's securities and the public exchanges and markets on which they are traded. All equity securities SHOULD be listed here, plus any other securities from which beneficial ownership might be derived. Where a security is traded on more than one market, there SHOULD be an entry for each market (or market segment).",
                        "items": {
                          "type": "object",
                          "title": "Securities Listing",
                          "description": "Details of a security and the market on which it is traded.",
                          "required": [
                            "stockExchangeJurisdiction",
                            "security",
                            "stockExchangeName"
                          ],
                          "properties": {
                            "marketIdentifierCode": {
                              "type": "string",
                              "title": "Market Identifier Code (MIC)",
                              "description": "The Market Identifier Code (MIC) of the market on which the security is traded. Where the security is traded on a segment of an exchange, this is the MIC of the segment. Where it is traded on the main exchange, this is the MIC of the main exchange and MUST match the `operatingMarketIdentifierCode`. MICs are allocated and managed under ISO standard 10383."
                            },
                            "operatingMarketIdentifierCode": {
                              "type": "string",
                              "title": "Operating Market Identifier Code (Operating MIC)",
                              "description": "The Market Identifier Code (MIC) of the main exchange or trading platform handling trades in this security. Where the security is traded on a segment of an exchange, this is the MIC of the parent exchange or trading platform. Where it is traded on the main exchange, this is the MIC of that main exchange and MUST match the `marketIdentifierCode`. MICs are allocated and managed under ISO standard 10383."
                            },
                            "stockExchangeJurisdiction": {
                              "type": "string",
                              "title": "Stock Exchange Jurisdiction",
                              "description": "The 2-letter country code (ISO 3166-1) or the subdivision code (ISO 3166-2) for the jurisdiction under which the exchange, market or trading platform is regulated.",
                              "maxLength": 6,
                              "minLength": 2
                            },
                            "stockExchangeName": {
                              "type": "string",
                              "title": "Stock Exchange Name",
                              "description": "The name of the exchange, market or trading platform on which the security is traded. If the security is traded on a segment of the exchange, then the name SHOULD include both elements. For example, 'London Stock Exchange - MTF'."
                            },
                            "security": {
                              "type": "object",
                              "title": "Security",
                              "description": "Identifying information of the stock or other security.",
                              "required": [
                                "ticker"
                              ],
                              "properties": {
                                "idScheme": {
                                  "type": "string",
                                  "title": "Identifier Scheme",
                                  "description": "The scheme under which the security has been issued a unique, persistent identifier, using the securitiesIdentifierSchemes codelist.",
                                  "enum": [
                                    "isin",
                                    "figi",
                                    "cusip",
                                    "cins"
                                  ],
                                  "codelist": "securitiesIdentifierSchemes.csv"
                                },
                                "id": {
                                  "type": "string",
                                  "title": "Identifier",
                                  "description": "The unique identifier of the security as issued under the `idScheme`."
                                },
                                "ticker": {
                                  "type": "string",
                                  "title": "Stock Ticker",
                                  "description": "The stock ticker identifying this security on the named stock exchange."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "formedByStatute": {
                    "type": "object",
                    "title": "Formed by Statute",
                    "description": "The law which mandated the formation of the entity described in the statement, where applicable. This information SHOULD be provided where a state has created an agency or other entity with specific legislation.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Statute Name",
                        "description": "The name of the law. "
                      },
                      "date": {
                        "type": "string",
                        "title": "Date",
                        "description": "The date on which the law came into force. The date MUST be given in YYYY-MM-DD format. Where a precise month or date are not available, the value may be rounded to the first day of the (first) month. This rounding SHOULD be noted in accompanying guidance (such as a publication policy or data use guide).",
                        "format": "date"
                      }
                    },
                    "propertyOrder": 18
                  }
                },
                "required": [
                  "isComponent",
                  "entityType"
                ],
                "$defs": {
                  "PublicListing": {
                    "type": "object",
                    "title": "Public Listing",
                    "description": "Details of a publicly listed company, its securities (shares and other tradable financial instruments related to the entity), and related regulatory filings.",
                    "required": [
                      "hasPublicListing"
                    ],
                    "minProperties": 1,
                    "properties": {
                      "hasPublicListing": {
                        "type": "boolean",
                        "title": "Has Public Listing",
                        "description": "Whether the entity is a publicly listed company."
                      },
                      "companyFilingsURLs": {
                        "type": "array",
                        "title": "Company Filings URLs",
                        "description": "URL or URLs where regulatory filings related to major holdings can be retrieved. URLs may point to pages maintained by regulatory bodies, stock exchanges or by the company itself.",
                        "items": {
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "securitiesListings": {
                        "type": "array",
                        "title": "Securities Listings",
                        "description": "Details of the entity's securities and the public exchanges and markets on which they are traded. All equity securities SHOULD be listed here, plus any other securities from which beneficial ownership might be derived. Where a security is traded on more than one market, there SHOULD be an entry for each market (or market segment).",
                        "items": {
                          "type": "object",
                          "title": "Securities Listing",
                          "description": "Details of a security and the market on which it is traded.",
                          "required": [
                            "stockExchangeJurisdiction",
                            "security",
                            "stockExchangeName"
                          ],
                          "properties": {
                            "marketIdentifierCode": {
                              "type": "string",
                              "title": "Market Identifier Code (MIC)",
                              "description": "The Market Identifier Code (MIC) of the market on which the security is traded. Where the security is traded on a segment of an exchange, this is the MIC of the segment. Where it is traded on the main exchange, this is the MIC of the main exchange and MUST match the `operatingMarketIdentifierCode`. MICs are allocated and managed under ISO standard 10383."
                            },
                            "operatingMarketIdentifierCode": {
                              "type": "string",
                              "title": "Operating Market Identifier Code (Operating MIC)",
                              "description": "The Market Identifier Code (MIC) of the main exchange or trading platform handling trades in this security. Where the security is traded on a segment of an exchange, this is the MIC of the parent exchange or trading platform. Where it is traded on the main exchange, this is the MIC of that main exchange and MUST match the `marketIdentifierCode`. MICs are allocated and managed under ISO standard 10383."
                            },
                            "stockExchangeJurisdiction": {
                              "type": "string",
                              "title": "Stock Exchange Jurisdiction",
                              "description": "The 2-letter country code (ISO 3166-1) or the subdivision code (ISO 3166-2) for the jurisdiction under which the exchange, market or trading platform is regulated.",
                              "maxLength": 6,
                              "minLength": 2
                            },
                            "stockExchangeName": {
                              "type": "string",
                              "title": "Stock Exchange Name",
                              "description": "The name of the exchange, market or trading platform on which the security is traded. If the security is traded on a segment of the exchange, then the name SHOULD include both elements. For example, 'London Stock Exchange - MTF'."
                            },
                            "security": {
                              "type": "object",
                              "title": "Security",
                              "description": "Identifying information of the stock or other security.",
                              "required": [
                                "ticker"
                              ],
                              "properties": {
                                "idScheme": {
                                  "type": "string",
                                  "title": "Identifier Scheme",
                                  "description": "The scheme under which the security has been issued a unique, persistent identifier, using the securitiesIdentifierSchemes codelist.",
                                  "enum": [
                                    "isin",
                                    "figi",
                                    "cusip",
                                    "cins"
                                  ],
                                  "codelist": "securitiesIdentifierSchemes.csv"
                                },
                                "id": {
                                  "type": "string",
                                  "title": "Identifier",
                                  "description": "The unique identifier of the security as issued under the `idScheme`."
                                },
                                "ticker": {
                                  "type": "string",
                                  "title": "Stock Ticker",
                                  "description": "The stock ticker identifying this security on the named stock exchange."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "SecuritiesListing": {
                    "type": "object",
                    "title": "Securities Listing",
                    "description": "Details of a security and the market on which it is traded.",
                    "required": [
                      "stockExchangeJurisdiction",
                      "security",
                      "stockExchangeName"
                    ],
                    "properties": {
                      "marketIdentifierCode": {
                        "type": "string",
                        "title": "Market Identifier Code (MIC)",
                        "description": "The Market Identifier Code (MIC) of the market on which the security is traded. Where the security is traded on a segment of an exchange, this is the MIC of the segment. Where it is traded on the main exchange, this is the MIC of the main exchange and MUST match the `operatingMarketIdentifierCode`. MICs are allocated and managed under ISO standard 10383."
                      },
                      "operatingMarketIdentifierCode": {
                        "type": "string",
                        "title": "Operating Market Identifier Code (Operating MIC)",
                        "description": "The Market Identifier Code (MIC) of the main exchange or trading platform handling trades in this security. Where the security is traded on a segment of an exchange, this is the MIC of the parent exchange or trading platform. Where it is traded on the main exchange, this is the MIC of that main exchange and MUST match the `marketIdentifierCode`. MICs are allocated and managed under ISO standard 10383."
                      },
                      "stockExchangeJurisdiction": {
                        "type": "string",
                        "title": "Stock Exchange Jurisdiction",
                        "description": "The 2-letter country code (ISO 3166-1) or the subdivision code (ISO 3166-2) for the jurisdiction under which the exchange, market or trading platform is regulated.",
                        "maxLength": 6,
                        "minLength": 2
                      },
                      "stockExchangeName": {
                        "type": "string",
                        "title": "Stock Exchange Name",
                        "description": "The name of the exchange, market or trading platform on which the security is traded. If the security is traded on a segment of the exchange, then the name SHOULD include both elements. For example, 'London Stock Exchange - MTF'."
                      },
                      "security": {
                        "type": "object",
                        "title": "Security",
                        "description": "Identifying information of the stock or other security.",
                        "required": [
                          "ticker"
                        ],
                        "properties": {
                          "idScheme": {
                            "type": "string",
                            "title": "Identifier Scheme",
                            "description": "The scheme under which the security has been issued a unique, persistent identifier, using the securitiesIdentifierSchemes codelist.",
                            "enum": [
                              "isin",
                              "figi",
                              "cusip",
                              "cins"
                            ],
                            "codelist": "securitiesIdentifierSchemes.csv"
                          },
                          "id": {
                            "type": "string",
                            "title": "Identifier",
                            "description": "The unique identifier of the security as issued under the `idScheme`."
                          },
                          "ticker": {
                            "type": "string",
                            "title": "Stock Ticker",
                            "description": "The stock ticker identifying this security on the named stock exchange."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "recordType": {
                "const": "person"
              }
            }
          },
          "then": {
            "properties": {
              "recordDetails": {
                "$id": "urn:person",
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "version": "0.4",
                "type": "object",
                "title": "Person Record Details",
                "description": "Information about a natural person.",
                "properties": {
                  "isComponent": {
                    "title": "Is component",
                    "description": "Whether this person is a component of an indirect relationship. Where `isComponent` is 'true': (1) the `recordId` of this person MUST be an element in the `componentRecords` array of that primary Relationship Statement, (2) this Person Statement MUST come before that primary Relationship Statement in a BODS package or stream, (3) the replacement of this Person Statement SHOULD be considered when replacing the primary Relationship Statement. The primary Relationship Statement MUST have a `isComponent` value of 'false'.",
                    "type": "boolean"
                  },
                  "personType": {
                    "title": "Person Type",
                    "description": "The status of this person, using the personType codelist. Where a person has the type 'anonymousPerson' or 'unknownPerson' a reason for the absence of information SHOULD be provided in 'unspecifiedPersonDetails'",
                    "type": "string",
                    "enum": [
                      "anonymousPerson",
                      "unknownPerson",
                      "knownPerson"
                    ],
                    "propertyOrder": 4,
                    "codelist": "personType.csv",
                    "openCodelist": false
                  },
                  "unspecifiedPersonDetails": {
                    "title": "Unspecified or unknown person or entity",
                    "description": "A `reason` MUST be supplied.",
                    "type": "object",
                    "properties": {
                      "reason": {
                        "title": "Reason",
                        "description": "The reason that a person or entity cannot be specified, using the unspecifiedReason codelist.",
                        "type": "string",
                        "enum": [
                          "noBeneficialOwners",
                          "subjectUnableToConfirmOrIdentifyBeneficialOwner",
                          "interestedPartyHasNotProvidedInformation",
                          "subjectExemptFromDisclosure",
                          "interestedPartyExemptFromDisclosure",
                          "unknown",
                          "informationUnknownToPublisher"
                        ],
                        "codelist": "unspecifiedReason.csv",
                        "openCodelist": false
                      },
                      "description": {
                        "title": "Description",
                        "description": "Additional information about the absence of details for a person or entity. This field may be used to provide set phrases from a source system, or a free text explanation.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "reason"
                    ]
                  },
                  "names": {
                    "title": "Names",
                    "description": "One or more known names for this person.",
                    "type": "array",
                    "items": {
                      "title": "Name",
                      "description": "A name by which this person is known. A name MUST be provided in `fullName`, and MAY be broken down in the `familyName`, `givenName` and `patronymicName` fields, based on the EC ISA Core Person Vocabulary (https://joinup.ec.europa.eu/solution/e-government-core-vocabularies) definitions.",
                      "type": "object",
                      "required": [
                        "fullName"
                      ],
                      "properties": {
                        "type": {
                          "title": "Type",
                          "description": "The status of this name for the person, using the nameType codelist.",
                          "type": "string",
                          "enum": [
                            "legal",
                            "translation",
                            "transliteration",
                            "former",
                            "alternative",
                            "birth"
                          ],
                          "codelist": "nameType.csv",
                          "openCodelist": false
                        },
                        "fullName": {
                          "title": "Full Name",
                          "description": "The complete name of the person.",
                          "type": "string"
                        },
                        "familyName": {
                          "title": "Family Name",
                          "description": "Part of the person's `fullName` which is shared by family members. The value may include prefixes or suffixes, e.g. 'de Boer', 'van de Putte', 'von und zu Orlow'. The value may be a multiple-part family name, such as are commonly found in Hispanic countries. For example, Miguel de Cervantes Saavedra's Family Name would be recorded as 'de Cervantes Saavedra.'",
                          "type": "string"
                        },
                        "givenName": {
                          "title": "Given Names",
                          "description": "The part of the person's `fullName` that identifies the person within their family. These are given to a person by their parents at birth or may be legally recognised as 'given names' through a formal process. For example, the given name for Johann Sebastian Bach is 'Johann Sebastian'.",
                          "type": "string"
                        },
                        "patronymicName": {
                          "title": "Patronymic Name",
                          "description": "Part of the person's `fullName` which is inherited from their father, as is common in countries such as Iceland, Ethiopia and Russia. For example, the 'Sergeyevich' in 'Mikhail Sergeyevich Gorbachev'.",
                          "type": "string"
                        }
                      }
                    },
                    "propertyOrder": 10
                  },
                  "identifiers": {
                    "title": "Identifiers",
                    "description": "One or more official identifiers for this person. Where available, official registration numbers should be provided.",
                    "type": "array",
                    "items": {
                      "title": "Identifier",
                      "description": "An identifier that has been assigned to a person or entity. `scheme` or `schemeName` (or both) MUST be included in an Identifier object.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "ID",
                          "description": "The identifier for a person or entity, as issued by the scheme.",
                          "type": "string"
                        },
                        "scheme": {
                          "title": "Scheme Code",
                          "description": "For entities, a code from org-id.guide (https://www.org-id.guide) for an identifier-issuing authority (e.g. 'GB-COH'). For natural persons, a value with the pattern {JURISDICTION}-{TYPE} where JURISDICTION is an ISO 3166-1 3-digit country code and TYPE is one of PASSPORT, TAXID or IDCARD.",
                          "type": "string"
                        },
                        "schemeName": {
                          "title": "Scheme Name",
                          "description": "The name of the identifier-issuing authority.",
                          "type": "string"
                        },
                        "uri": {
                          "title": "URI",
                          "description": "A canonical URI (https://en.wikipedia.org/wiki/Uniform_Resource_Identifier) for the identifier and associated details of the person or entity, if one exists.",
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "anyOf": [
                        {
                          "required": [
                            "scheme"
                          ]
                        },
                        {
                          "required": [
                            "schemeName"
                          ]
                        },
                        {
                          "required": [
                            "scheme",
                            "schemeName"
                          ]
                        }
                      ]
                    },
                    "propertyOrder": 20
                  },
                  "nationalities": {
                    "title": "Nationality",
                    "description": "The nationalities held by this person.",
                    "type": "array",
                    "items": {
                      "title": "Country",
                      "description": "A country MUST have a name. A country SHOULD have a 2-letter country code (ISO 3166-1)",
                      "type": "object",
                      "properties": {
                        "name": {
                          "title": "Name",
                          "description": "The name of the country",
                          "type": "string"
                        },
                        "code": {
                          "title": "Country Code",
                          "description": "The 2-letter country code (ISO 3166-1) for this country.",
                          "type": "string",
                          "maxLength": 2,
                          "minLength": 2
                        }
                      },
                      "required": [
                        "name"
                      ]
                    },
                    "propertyOrder": 30
                  },
                  "placeOfBirth": {
                    "title": "Address",
                    "description": "Semi-structured address details, suitable for processing using address-parsing algorithms. Where postal codes and country information are isolated fields in source systems, this information SHOULD be published in the dedicated fields and SHOULD NOT be published in the `address` field.",
                    "type": "object",
                    "properties": {
                      "type": {
                        "title": "Type",
                        "description": "The function of the address, using the addressType codelist.",
                        "type": "string",
                        "enum": [
                          "placeOfBirth",
                          "residence",
                          "registered",
                          "service",
                          "alternative",
                          "business"
                        ],
                        "codelist": "addressType.csv",
                        "openCodelist": false
                      },
                      "address": {
                        "title": "Address",
                        "description": "The address, with each line or component separated by a line-break or comma.",
                        "type": "string"
                      },
                      "postCode": {
                        "title": "Postcode",
                        "description": "The postal code for this address.",
                        "type": "string"
                      },
                      "country": {
                        "title": "Country",
                        "description": "A country MUST have a name. A country SHOULD have a 2-letter country code (ISO 3166-1)",
                        "type": "object",
                        "properties": {
                          "name": {
                            "title": "Name",
                            "description": "The name of the country",
                            "type": "string"
                          },
                          "code": {
                            "title": "Country Code",
                            "description": "The 2-letter country code (ISO 3166-1) for this country.",
                            "type": "string",
                            "maxLength": 2,
                            "minLength": 2
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    }
                  },
                  "birthDate": {
                    "title": "Date of Birth",
                    "description": "The date of birth for this person, in YYYY, YYYY-MM, or YYYY-MM-DD format.",
                    "type": "string",
                    "anyOf": [
                      {
                        "pattern": "^(\\d{4})(-(1[0-2]|0[1-9]))?$"
                      },
                      {
                        "format": "date"
                      }
                    ],
                    "propertyOrder": 35
                  },
                  "deathDate": {
                    "title": "Death Date",
                    "description": "The date of death for this person, in YYYY, YYYY-MM, or YYYY-MM-DD format.",
                    "type": "string",
                    "anyOf": [
                      {
                        "pattern": "^(\\d{4})(-(1[0-2]|0[1-9]))?$"
                      },
                      {
                        "format": "date"
                      }
                    ],
                    "propertyOrder": 36
                  },
                  "taxResidencies": {
                    "title": "Tax Residency",
                    "description": "The tax residencies held by this person, as an array of Country objects.",
                    "type": "array",
                    "items": {
                      "title": "Country",
                      "description": "A country MUST have a name. A country SHOULD have a 2-letter country code (ISO 3166-1)",
                      "type": "object",
                      "properties": {
                        "name": {
                          "title": "Name",
                          "description": "The name of the country",
                          "type": "string"
                        },
                        "code": {
                          "title": "Country Code",
                          "description": "The 2-letter country code (ISO 3166-1) for this country.",
                          "type": "string",
                          "maxLength": 2,
                          "minLength": 2
                        }
                      },
                      "required": [
                        "name"
                      ]
                    },
                    "propertyOrder": 55
                  },
                  "addresses": {
                    "title": "Addresses",
                    "description": "One or more addresses for this person.",
                    "type": "array",
                    "items": {
                      "title": "Address",
                      "description": "Semi-structured address details, suitable for processing using address-parsing algorithms. Where postal codes and country information are isolated fields in source systems, this information SHOULD be published in the dedicated fields and SHOULD NOT be published in the `address` field.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "title": "Type",
                          "description": "The function of the address, using the addressType codelist.",
                          "type": "string",
                          "enum": [
                            "placeOfBirth",
                            "residence",
                            "registered",
                            "service",
                            "alternative",
                            "business"
                          ],
                          "codelist": "addressType.csv",
                          "openCodelist": false
                        },
                        "address": {
                          "title": "Address",
                          "description": "The address, with each line or component separated by a line-break or comma.",
                          "type": "string"
                        },
                        "postCode": {
                          "title": "Postcode",
                          "description": "The postal code for this address.",
                          "type": "string"
                        },
                        "country": {
                          "title": "Country",
                          "description": "A country MUST have a name. A country SHOULD have a 2-letter country code (ISO 3166-1)",
                          "type": "object",
                          "properties": {
                            "name": {
                              "title": "Name",
                              "description": "The name of the country",
                              "type": "string"
                            },
                            "code": {
                              "title": "Country Code",
                              "description": "The 2-letter country code (ISO 3166-1) for this country.",
                              "type": "string",
                              "maxLength": 2,
                              "minLength": 2
                            }
                          },
                          "required": [
                            "name"
                          ]
                        }
                      }
                    },
                    "propertyOrder": 60
                  },
                  "politicalExposure": {
                    "type": "object",
                    "title": "Political Exposure",
                    "description": "Information about whether, and how, the person described by this statement is politically exposed. Use this property only if politically exposed person (PEP) declarations are expected as part of beneficial ownership declarations.",
                    "required": [
                      "status"
                    ],
                    "properties": {
                      "status": {
                        "type": "string",
                        "title": "Politically Exposed Person (PEP) Status",
                        "description": "This value is 'isPep' or 'isNotPep' according to whether the person described by this statement has the status of politically exposed person (PEP). An 'unknown' value means a PEP status declaration is expected but missing; the reason for the missing data SHOULD be supplied in the `details` array.",
                        "enum": [
                          "isPep",
                          "isNotPep",
                          "unknown"
                        ]
                      },
                      "details": {
                        "type": "array",
                        "title": "Politically Exposed Person (PEP) Details",
                        "description": "One or more descriptions of this person's Politically Exposed Person (PEP) status.",
                        "items": {
                          "title": "PEP Status Details",
                          "description": "Information about a person's political involvement.",
                          "type": "object",
                          "properties": {
                            "reason": {
                              "title": "Reason",
                              "description": "The reason for this person being declared a politically-exposed person.",
                              "type": "string"
                            },
                            "missingInfoReason": {
                              "title": "Missing Information Reasons",
                              "description": "An explanation of why the PEP status for the person is not provided (i.e. `politicalExposure.status` is 'unknown'). This may be a standard descriptive phrase from the source system, or a free text justification. Where this field is present it should be the only field except for `source`.",
                              "type": "string"
                            },
                            "jurisdiction": {
                              "title": "Jurisdiction",
                              "description": "A Jurisdiction MUST have a name. A jurisdiction SHOULD have a 2-letter country code (ISO 3166-1) or a subdivision code (ISO 3166-2).",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "title": "Name",
                                  "description": "The name of the jurisdiction",
                                  "type": "string"
                                },
                                "code": {
                                  "title": "Country or Subdivision Code",
                                  "description": "The 2-letter country code (ISO 3166-1) or the subdivision code (ISO 3166-2) for the jurisdiction.",
                                  "type": "string",
                                  "maxLength": 6,
                                  "minLength": 2
                                }
                              },
                              "required": [
                                "name"
                              ]
                            },
                            "startDate": {
                              "title": "State Date",
                              "description": "The date from which this person had the status of a Politically-exposed Person (PEP). The date MUST be given in YYYY-MM-DD format. Where a precise month or date are unknown, the value may be rounded to the first day of the (first) month. This rounding SHOULD be noted in accompanying guidance (such as a publication policy or data use guide).",
                              "type": "string",
                              "format": "date"
                            },
                            "endDate": {
                              "title": "End Date",
                              "description": "The date from which this person no longer had the status of a Politically-exposed Person (PEP). The date MUST be given in YYYY-MM-DD format. Where a precise month or date are unknown, the value may be rounded to the first day of the (first) month.  This rounding SHOULD be noted in accompanying guidance (such as a publication policy or data use guide).",
                              "type": "string",
                              "format": "date"
                            },
                            "source": {
                              "title": "Source",
                              "description": "Details describing an information source.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "title": "Source Type",
                                  "description": "The types of the source, using the sourceType codelist. Include 'verified' in the array if the information in the Statement has undergone a verification process.",
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "selfDeclaration",
                                      "officialRegister",
                                      "thirdParty",
                                      "primaryResearch",
                                      "verified"
                                    ],
                                    "codelist": "sourceType.csv",
                                    "openCodelist": false
                                  }
                                },
                                "description": {
                                  "title": "Description",
                                  "description": "Additional, free text information about the source of information.",
                                  "type": "string"
                                },
                                "url": {
                                  "title": "Source URL",
                                  "description": "The external URL from which this information was fetched, if relevant. Or, if relevant, a URL providing additional detail on how this information was sourced.",
                                  "type": "string",
                                  "format": "uri"
                                },
                                "retrievedAt": {
                                  "title": "Retrieved At",
                                  "description": "A timestamp indicating when this information was imported from an external system, in full-date (YYYY-MM-DD) or date-time (e.g. YYYY-MM-DDTHH:MM:SSZ) format. See the IETF RFC3339 standard, section 5.6.",
                                  "type": "string",
                                  "anyOf": [
                                    {
                                      "format": "date"
                                    },
                                    {
                                      "format": "date-time"
                                    }
                                  ]
                                },
                                "assertedBy": {
                                  "title": "Asserted By",
                                  "description": "The people or organisations providing the information asserted in this Statement. This may include the declaring subject of a self-declaration, or the name of an agent making a declaration on their behalf. If this Statement has been verified, the array may include the name of the organisation providing verification.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "title": "Name",
                                        "description": "The name of the agent making the assertion",
                                        "type": "string"
                                      },
                                      "uri": {
                                        "title": "URI",
                                        "description": "An optional URI to identify the agent making the assertion",
                                        "type": "string",
                                        "format": "uri"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "personType",
                  "isComponent"
                ],
                "$defs": {
                  "Name": {
                    "title": "Name",
                    "description": "A name by which this person is known. A name MUST be provided in `fullName`, and MAY be broken down in the `familyName`, `givenName` and `patronymicName` fields, based on the EC ISA Core Person Vocabulary (https://joinup.ec.europa.eu/solution/e-government-core-vocabularies) definitions.",
                    "type": "object",
                    "required": [
                      "fullName"
                    ],
                    "properties": {
                      "type": {
                        "title": "Type",
                        "description": "The status of this name for the person, using the nameType codelist.",
                        "type": "string",
                        "enum": [
                          "legal",
                          "translation",
                          "transliteration",
                          "former",
                          "alternative",
                          "birth"
                        ],
                        "codelist": "nameType.csv",
                        "openCodelist": false
                      },
                      "fullName": {
                        "title": "Full Name",
                        "description": "The complete name of the person.",
                        "type": "string"
                      },
                      "familyName": {
                        "title": "Family Name",
                        "description": "Part of the person's `fullName` which is shared by family members. The value may include prefixes or suffixes, e.g. 'de Boer', 'van de Putte', 'von und zu Orlow'. The value may be a multiple-part family name, such as are commonly found in Hispanic countries. For example, Miguel de Cervantes Saavedra's Family Name would be recorded as 'de Cervantes Saavedra.'",
                        "type": "string"
                      },
                      "givenName": {
                        "title": "Given Names",
                        "description": "The part of the person's `fullName` that identifies the person within their family. These are given to a person by their parents at birth or may be legally recognised as 'given names' through a formal process. For example, the given name for Johann Sebastian Bach is 'Johann Sebastian'.",
                        "type": "string"
                      },
                      "patronymicName": {
                        "title": "Patronymic Name",
                        "description": "Part of the person's `fullName` which is inherited from their father, as is common in countries such as Iceland, Ethiopia and Russia. For example, the 'Sergeyevich' in 'Mikhail Sergeyevich Gorbachev'.",
                        "type": "string"
                      }
                    }
                  },
                  "PepStatusDetails": {
                    "title": "PEP Status Details",
                    "description": "Information about a person's political involvement.",
                    "type": "object",
                    "properties": {
                      "reason": {
                        "title": "Reason",
                        "description": "The reason for this person being declared a politically-exposed person.",
                        "type": "string"
                      },
                      "missingInfoReason": {
                        "title": "Missing Information Reasons",
                        "description": "An explanation of why the PEP status for the person is not provided (i.e. `politicalExposure.status` is 'unknown'). This may be a standard descriptive phrase from the source system, or a free text justification. Where this field is present it should be the only field except for `source`.",
                        "type": "string"
                      },
                      "jurisdiction": {
                        "title": "Jurisdiction",
                        "description": "A Jurisdiction MUST have a name. A jurisdiction SHOULD have a 2-letter country code (ISO 3166-1) or a subdivision code (ISO 3166-2).",
                        "type": "object",
                        "properties": {
                          "name": {
                            "title": "Name",
                            "description": "The name of the jurisdiction",
                            "type": "string"
                          },
                          "code": {
                            "title": "Country or Subdivision Code",
                            "description": "The 2-letter country code (ISO 3166-1) or the subdivision code (ISO 3166-2) for the jurisdiction.",
                            "type": "string",
                            "maxLength": 6,
                            "minLength": 2
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "startDate": {
                        "title": "State Date",
                        "description": "The date from which this person had the status of a Politically-exposed Person (PEP). The date MUST be given in YYYY-MM-DD format. Where a precise month or date are unknown, the value may be rounded to the first day of the (first) month. This rounding SHOULD be noted in accompanying guidance (such as a publication policy or data use guide).",
                        "type": "string",
                        "format": "date"
                      },
                      "endDate": {
                        "title": "End Date",
                        "description": "The date from which this person no longer had the status of a Politically-exposed Person (PEP). The date MUST be given in YYYY-MM-DD format. Where a precise month or date are unknown, the value may be rounded to the first day of the (first) month.  This rounding SHOULD be noted in accompanying guidance (such as a publication policy or data use guide).",
                        "type": "string",
                        "format": "date"
                      },
                      "source": {
                        "title": "Source",
                        "description": "Details describing an information source.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "title": "Source Type",
                            "description": "The types of the source, using the sourceType codelist. Include 'verified' in the array if the information in the Statement has undergone a verification process.",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "selfDeclaration",
                                "officialRegister",
                                "thirdParty",
                                "primaryResearch",
                                "verified"
                              ],
                              "codelist": "sourceType.csv",
                              "openCodelist": false
                            }
                          },
                          "description": {
                            "title": "Description",
                            "description": "Additional, free text information about the source of information.",
                            "type": "string"
                          },
                          "url": {
                            "title": "Source URL",
                            "description": "The external URL from which this information was fetched, if relevant. Or, if relevant, a URL providing additional detail on how this information was sourced.",
                            "type": "string",
                            "format": "uri"
                          },
                          "retrievedAt": {
                            "title": "Retrieved At",
                            "description": "A timestamp indicating when this information was imported from an external system, in full-date (YYYY-MM-DD) or date-time (e.g. YYYY-MM-DDTHH:MM:SSZ) format. See the IETF RFC3339 standard, section 5.6.",
                            "type": "string",
                            "anyOf": [
                              {
                                "format": "date"
                              },
                              {
                                "format": "date-time"
                              }
                            ]
                          },
                          "assertedBy": {
                            "title": "Asserted By",
                            "description": "The people or organisations providing the information asserted in this Statement. This may include the declaring subject of a self-declaration, or the name of an agent making a declaration on their behalf. If this Statement has been verified, the array may include the name of the organisation providing verification.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "title": "Name",
                                  "description": "The name of the agent making the assertion",
                                  "type": "string"
                                },
                                "uri": {
                                  "title": "URI",
                                  "description": "An optional URI to identify the agent making the assertion",
                                  "type": "string",
                                  "format": "uri"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "recordType": {
                "const": "relationship"
              }
            }
          },
          "then": {
            "properties": {
              "recordDetails": {
                "$id": "urn:relationship",
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "version": "0.4",
                "title": "Relationship Record Details",
                "description": "Information about the interests that an interested party (a person or entity) holds in the subject (an entity).",
                "type": "object",
                "properties": {
                  "isComponent": {
                    "title": "Is component",
                    "description": "Whether this relationship is a component of a wider indirect relationship. Where `isComponent` is 'true': (1) the `recordId` of this secondary Relationship Statement MUST be an element in the `componentRecords` array of that primary Relationship Statement, (2) this Relationship Statement MUST come before that primary Relationship Statement in a BODS package or stream, (3) the replacement of this Relationship Statement SHOULD be considered when replacing the primary Relationship Statement, and (4) the primary Relationship Statement MUST have an `isComponent` value of 'false'. Where `isComponent` is 'false', this Relationship Statement is the primary declaration of the relationship between the `subject` and the `interestedParty`.",
                    "type": "boolean"
                  },
                  "componentRecords": {
                    "title": "Component Record IDs",
                    "description": "The `recordId` values of all component records that provide detail about this relationship between the `subject` and the `interestedParty` (if it is indirect). If this relationship has components, its own `isComponent` value MUST be 'false'.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "subject": {
                    "title": "Subject",
                    "description": "The `recordId` for the subject of the relationship, or a reason why the subject cannot be specified. The subject MUST be an entity.",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "title": "Unspecified or unknown person or entity",
                        "description": "A `reason` MUST be supplied.",
                        "type": "object",
                        "properties": {
                          "reason": {
                            "title": "Reason",
                            "description": "The reason that a person or entity cannot be specified, using the unspecifiedReason codelist.",
                            "type": "string",
                            "enum": [
                              "noBeneficialOwners",
                              "subjectUnableToConfirmOrIdentifyBeneficialOwner",
                              "interestedPartyHasNotProvidedInformation",
                              "subjectExemptFromDisclosure",
                              "interestedPartyExemptFromDisclosure",
                              "unknown",
                              "informationUnknownToPublisher"
                            ],
                            "codelist": "unspecifiedReason.csv",
                            "openCodelist": false
                          },
                          "description": {
                            "title": "Description",
                            "description": "Additional information about the absence of details for a person or entity. This field may be used to provide set phrases from a source system, or a free text explanation.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "reason"
                        ]
                      }
                    ]
                  },
                  "interestedParty": {
                    "title": "Interested Party",
                    "description": "The `recordId` for the interested party in the relationship, or an Unspecified Record object with a reason for why this information has not been disclosed. The interested party MAY be an entity or a person. An Unspecified Record SHOULD only be used where no information at all is known about interested parties beyond this point of the beneficial ownership network. If the interested party is known to be an entity or person but their particular identity is unavailable, a `recordId` for them SHOULD be provided here (and the their `recordDetails.[person|entity]Type` should indicate that they are anonymous or unknown).",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "title": "Unspecified or unknown person or entity",
                        "description": "A `reason` MUST be supplied.",
                        "type": "object",
                        "properties": {
                          "reason": {
                            "title": "Reason",
                            "description": "The reason that a person or entity cannot be specified, using the unspecifiedReason codelist.",
                            "type": "string",
                            "enum": [
                              "noBeneficialOwners",
                              "subjectUnableToConfirmOrIdentifyBeneficialOwner",
                              "interestedPartyHasNotProvidedInformation",
                              "subjectExemptFromDisclosure",
                              "interestedPartyExemptFromDisclosure",
                              "unknown",
                              "informationUnknownToPublisher"
                            ],
                            "codelist": "unspecifiedReason.csv",
                            "openCodelist": false
                          },
                          "description": {
                            "title": "Description",
                            "description": "Additional information about the absence of details for a person or entity. This field may be used to provide set phrases from a source system, or a free text explanation.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "reason"
                        ]
                      }
                    ]
                  },
                  "interests": {
                    "title": "Interests",
                    "description": "A description of the interests held by the interested party in the subject.",
                    "type": "array",
                    "items": {
                      "title": "Interest",
                      "description": "A description of an interest held by an interestedParty in the subject.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "title": "Type of Interest",
                          "description": "The nature of the interest, using the interestType codelist.",
                          "type": "string",
                          "enum": [
                            "shareholding",
                            "votingRights",
                            "appointmentOfBoard",
                            "otherInfluenceOrControl",
                            "seniorManagingOfficial",
                            "settlor",
                            "trustee",
                            "protector",
                            "beneficiaryOfLegalArrangement",
                            "rightsToSurplusAssetsOnDissolution",
                            "rightsToProfitOrIncome",
                            "rightsGrantedByContract",
                            "conditionalRightsGrantedByContract",
                            "controlViaCompanyRulesOrArticles",
                            "controlByLegalFramework",
                            "boardMember",
                            "boardChair",
                            "unknownInterest",
                            "unpublishedInterest",
                            "enjoymentAndUseOfAssets",
                            "rightToProfitOrIncomeFromAssets",
                            "nominee",
                            "nominator"
                          ],
                          "codelist": "interestType.csv",
                          "openCodelist": false
                        },
                        "directOrIndirect": {
                          "title": "Direct or Indirect",
                          "description": "How directly the interest is exercised by the interested party. The value MUST be 'indirect' if intermediate entities or agents are known to exist, and MUST be 'direct' if such intermediaries are known not to exist. Otherwise the value MUST be 'unknown'.",
                          "type": "string",
                          "enum": [
                            "direct",
                            "indirect",
                            "unknown"
                          ],
                          "codelist": "directOrIndirect.csv",
                          "openCodelist": false
                        },
                        "beneficialOwnershipOrControl": {
                          "title": "Beneficial Ownership or Control",
                          "description": "Whether this interest (alone or with others) means the interested party is a beneficial owner of the subject. If 'true' the interested party MUST be a natural person. The definition of 'beneficial owner' in operation SHOULD be noted in accompanying guidance (such as a publication policy or data use guide).",
                          "type": "boolean"
                        },
                        "details": {
                          "title": "Details",
                          "description": "The local name given to this kind of interest, or further information (semi-structured or unstructured) to clarify the nature of the interest.",
                          "type": "string"
                        },
                        "share": {
                          "title": "Percentage Share",
                          "description": "The proportion of this type of interest held by the interested party, where an interest is countable. Provide the `exact` percentage if known. Otherwise, `minimum` (or `exclusiveMinimum`) and `maximum` (or `exclusiveMaximum`) can be used to record the range into which the proportion falls. (The `minimum` and `maximum` values are inclusive.)",
                          "type": "object",
                          "properties": {
                            "exact": {
                              "title": "Exact percentage",
                              "description": "The exact share of this interest held (if available).",
                              "type": "number",
                              "maximum": 100,
                              "minimum": 0
                            },
                            "maximum": {
                              "title": "Maximum Percentage",
                              "description": "The inclusive upper bound of the share of this interest.",
                              "type": "number",
                              "maximum": 100,
                              "minimum": 0
                            },
                            "minimum": {
                              "title": "Minimum Percentage",
                              "description": "The inclusive lower bound of the share of this interest.",
                              "type": "number",
                              "maximum": 100,
                              "minimum": 0
                            },
                            "exclusiveMinimum": {
                              "title": "Exclusive Minimum percentage",
                              "description": "The exclusive lower bound of the share of this interest.",
                              "type": "number",
                              "maximum": 100,
                              "minimum": 0
                            },
                            "exclusiveMaximum": {
                              "title": "Exclusive Maximum Percentage",
                              "description": "The exclusive upper bound of the share of this interest.",
                              "type": "number",
                              "maximum": 100,
                              "minimum": 0
                            }
                          }
                        },
                        "startDate": {
                          "title": "Start Date",
                          "description": "The date from which this interest was active. The date MUST be given in YYYY-MM-DD format. Where a precise month or date are unknown, the value may be rounded to the first day of the (first) month. This rounding SHOULD be noted in accompanying guidance (such as a publication policy or data use guide).",
                          "type": "string",
                          "format": "date"
                        },
                        "endDate": {
                          "title": "End Date",
                          "description": "The date from which this interest ceased to exist. The date MUST be given in YYYY-MM-DD format. Where a precise month or date are unknown, the value may be rounded to the first day of the (first) month. This rounding SHOULD be noted in accompanying guidance (such as a publication policy or data use guide).",
                          "type": "string",
                          "format": "date"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "isComponent",
                  "subject",
                  "interestedParty"
                ],
                "if": {
                  "properties": {
                    "isComponent": {
                      "const": true
                    }
                  }
                },
                "then": {
                  "properties": {
                    "componentRecords": {
                      "const": []
                    }
                  }
                },
                "$defs": {
                  "Interest": {
                    "title": "Interest",
                    "description": "A description of an interest held by an interestedParty in the subject.",
                    "type": "object",
                    "properties": {
                      "type": {
                        "title": "Type of Interest",
                        "description": "The nature of the interest, using the interestType codelist.",
                        "type": "string",
                        "enum": [
                          "shareholding",
                          "votingRights",
                          "appointmentOfBoard",
                          "otherInfluenceOrControl",
                          "seniorManagingOfficial",
                          "settlor",
                          "trustee",
                          "protector",
                          "beneficiaryOfLegalArrangement",
                          "rightsToSurplusAssetsOnDissolution",
                          "rightsToProfitOrIncome",
                          "rightsGrantedByContract",
                          "conditionalRightsGrantedByContract",
                          "controlViaCompanyRulesOrArticles",
                          "controlByLegalFramework",
                          "boardMember",
                          "boardChair",
                          "unknownInterest",
                          "unpublishedInterest",
                          "enjoymentAndUseOfAssets",
                          "rightToProfitOrIncomeFromAssets",
                          "nominee",
                          "nominator"
                        ],
                        "codelist": "interestType.csv",
                        "openCodelist": false
                      },
                      "directOrIndirect": {
                        "title": "Direct or Indirect",
                        "description": "How directly the interest is exercised by the interested party. The value MUST be 'indirect' if intermediate entities or agents are known to exist, and MUST be 'direct' if such intermediaries are known not to exist. Otherwise the value MUST be 'unknown'.",
                        "type": "string",
                        "enum": [
                          "direct",
                          "indirect",
                          "unknown"
                        ],
                        "codelist": "directOrIndirect.csv",
                        "openCodelist": false
                      },
                      "beneficialOwnershipOrControl": {
                        "title": "Beneficial Ownership or Control",
                        "description": "Whether this interest (alone or with others) means the interested party is a beneficial owner of the subject. If 'true' the interested party MUST be a natural person. The definition of 'beneficial owner' in operation SHOULD be noted in accompanying guidance (such as a publication policy or data use guide).",
                        "type": "boolean"
                      },
                      "details": {
                        "title": "Details",
                        "description": "The local name given to this kind of interest, or further information (semi-structured or unstructured) to clarify the nature of the interest.",
                        "type": "string"
                      },
                      "share": {
                        "title": "Percentage Share",
                        "description": "The proportion of this type of interest held by the interested party, where an interest is countable. Provide the `exact` percentage if known. Otherwise, `minimum` (or `exclusiveMinimum`) and `maximum` (or `exclusiveMaximum`) can be used to record the range into which the proportion falls. (The `minimum` and `maximum` values are inclusive.)",
                        "type": "object",
                        "properties": {
                          "exact": {
                            "title": "Exact percentage",
                            "description": "The exact share of this interest held (if available).",
                            "type": "number",
                            "maximum": 100,
                            "minimum": 0
                          },
                          "maximum": {
                            "title": "Maximum Percentage",
                            "description": "The inclusive upper bound of the share of this interest.",
                            "type": "number",
                            "maximum": 100,
                            "minimum": 0
                          },
                          "minimum": {
                            "title": "Minimum Percentage",
                            "description": "The inclusive lower bound of the share of this interest.",
                            "type": "number",
                            "maximum": 100,
                            "minimum": 0
                          },
                          "exclusiveMinimum": {
                            "title": "Exclusive Minimum percentage",
                            "description": "The exclusive lower bound of the share of this interest.",
                            "type": "number",
                            "maximum": 100,
                            "minimum": 0
                          },
                          "exclusiveMaximum": {
                            "title": "Exclusive Maximum Percentage",
                            "description": "The exclusive upper bound of the share of this interest.",
                            "type": "number",
                            "maximum": 100,
                            "minimum": 0
                          }
                        }
                      },
                      "startDate": {
                        "title": "Start Date",
                        "description": "The date from which this interest was active. The date MUST be given in YYYY-MM-DD format. Where a precise month or date are unknown, the value may be rounded to the first day of the (first) month. This rounding SHOULD be noted in accompanying guidance (such as a publication policy or data use guide).",
                        "type": "string",
                        "format": "date"
                      },
                      "endDate": {
                        "title": "End Date",
                        "description": "The date from which this interest ceased to exist. The date MUST be given in YYYY-MM-DD format. Where a precise month or date are unknown, the value may be rounded to the first day of the (first) month. This rounding SHOULD be noted in accompanying guidance (such as a publication policy or data use guide).",
                        "type": "string",
                        "format": "date"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "required": [
        "statementId",
        "declarationSubject",
        "recordId",
        "recordType",
        "recordDetails",
        "statementDate"
      ]
    },
    "Annotation": {
      "title": "Annotation",
      "description": "Additional information about the data contained in this Statement. Annotations can apply to a whole statement, an object or a single field. Custom properties can be included within the Annotation object to provide structured data where required.",
      "type": "object",
      "properties": {
        "statementPointerTarget": {
          "title": "Statement Fragment Pointer",
          "description": "An RFC6901 JSON Pointer (https://tools.ietf.org/html/rfc6901) describing the target fragment of the statement that this Annotation applies to, starting from the root of the Statement. An empty string (\"\") indicates that the Annotation applies to the whole Statement.",
          "type": "string"
        },
        "creationDate": {
          "title": "Creation Date",
          "description": "The date on which this Annotation was created, in full-date (YYYY-MM-DD) or date-time (e.g. YYYY-MM-DDTHH:MM:SSZ) format. See the IETF RFC3339 standard, section 5.6.",
          "type": "string",
          "anyOf": [
            {
              "format": "date"
            },
            {
              "format": "date-time"
            }
          ]
        },
        "createdBy": {
          "title": "Created By",
          "description": "The person, organisation or agent that created this Annotation.",
          "type": "object",
          "properties": {
            "name": {
              "title": "Name",
              "description": "The name of the person, organisation or agent that created this Annotation.",
              "type": "string"
            },
            "uri": {
              "title": "URI",
              "description": "An optional URI to identify the person, organisation or agent that created this Annotation.",
              "type": "string",
              "format": "uri"
            }
          }
        },
        "motivation": {
          "title": "Motivation",
          "description": "The reason for this Annotation, using the annotationMotivation codelist.",
          "type": "string",
          "enum": [
            "commenting",
            "correcting",
            "identifying",
            "linking",
            "transformation"
          ],
          "codelist": "annotationMotivation.csv",
          "openCodelist": false
        },
        "description": {
          "title": "Description",
          "description": "A free text description providing extra information about part of this Statement.",
          "type": "string"
        },
        "transformedContent": {
          "type": "string",
          "title": "Transformed Content",
          "description": "A representation of the Annotation target after the transformation in the `description` field has been applied. This field MUST only be used when the `motivation` is 'transformation'."
        },
        "url": {
          "title": "URL",
          "description": "A linked resource that annotates, provides context for or enhances this Statement. The content of the resource, or the relationship to the statement, MAY be described in the `description` field. This field is REQUIRED if the value of `motivation` is 'linking'.",
          "type": "string",
          "format": "uri"
        }
      },
      "allOf": [
        {
          "if": {
            "properties": {
              "motivation": {
                "const": "linking"
              }
            }
          },
          "then": {
            "required": [
              "statementPointerTarget",
              "motivation",
              "url"
            ]
          },
          "else": {
            "required": [
              "statementPointerTarget",
              "motivation"
            ]
          }
        },
        {
          "if": {
            "not": {
              "properties": {
                "motivation": {
                  "const": "transformation"
                }
              }
            }
          },
          "then": {
            "properties": {
              "transformedContent": {
                "const": ""
              }
            }
          }
        }
      ]
    }
  }
}